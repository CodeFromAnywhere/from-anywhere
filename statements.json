[
  {
    "modelName": "SwcInterface",
    "name": "NestedPartial",
    "start": 29,
    "end": 182,
    "raw": "export type NestedPartial<T extends O> = {\n  [TKey in keyof T]?: T[TKey] extends O\n    ? NestedPartial<T[TKey]> | undefined\n    : T[TKey] | undefined;\n};",
    "length": 153,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/NestedPartial.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/NestedPartial.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {
        "type": "object",
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      }
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "O",
    "start": 0,
    "end": 39,
    "raw": "export type O = { [key: string]: any };",
    "length": 39,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/O.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/O.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {
        "type": "object"
      },
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "insertAt",
    "start": 0,
    "end": 339,
    "length": 339,
    "raw": "export const insertAt = <T>(\n  array: T[],\n  items: T | T[],\n  /**\n   *\n   */\n  beforeIndex: number\n): T[] => {\n  const itemsArray = Array.isArray(items) ? items : [items];\n\n  // NB: slice makes copies\n  const before = array.slice(0, beforeIndex);\n  const after = array.slice(beforeIndex);\n  return [...before, ...itemsArray, ...after];\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/array-modifications.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/array-modifications.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/array-modifications.ts",
      "name": "NamedParameters<typeof insertAt>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/array-modifications.ts",
      "operationRelativePath": "src/array-modifications.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "removeIndexFromArray",
    "start": 527,
    "end": 713,
    "length": 186,
    "raw": "export const removeIndexFromArray = <T>(array: T[], index: number) => {\n  const before = array.slice(0, index);\n  const after = array.slice(index + 1);\n  return [...before, ...after];\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/array-modifications.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/array-modifications.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/array-modifications.ts",
      "name": "NamedParameters<typeof removeIndexFromArray>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/array-modifications.ts",
      "operationRelativePath": "src/array-modifications.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "findLastIndex",
    "start": 793,
    "end": 1026,
    "length": 233,
    "raw": "export const findLastIndex = <T>(array: T[], findFn: (item: T) => boolean) => {\n  const lastIndex = array\n    .map((item, index) => ({ item, index }))\n    .filter(({ item }) => findFn(item))\n    .pop()?.index;\n\n  return lastIndex;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/array-modifications.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/array-modifications.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/array-modifications.ts",
      "name": "NamedParameters<typeof findLastIndex>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/array-modifications.ts",
      "operationRelativePath": "src/array-modifications.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "putIndexAtIndex",
    "start": 1117,
    "end": 1394,
    "length": 277,
    "raw": "export const putIndexAtIndex = <T>(\n  array: T[],\n  index: number,\n  toIndex: number\n) => {\n  const item = array[index];\n  const arrayWithoutIndex = removeIndexFromArray(array, index);\n  const changedArray = insertAt(arrayWithoutIndex, item, toIndex);\n  return changedArray;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/array-modifications.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/array-modifications.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/array-modifications.ts",
      "name": "NamedParameters<typeof putIndexAtIndex>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/array-modifications.ts",
      "operationRelativePath": "src/array-modifications.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20putIndexAtIndex%3E",
        "definitions": {
          "NamedParameters<typeof putIndexAtIndex>": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {}
              },
              "index": {
                "type": "number"
              },
              "toIndex": {
                "type": "number"
              }
            },
            "required": [
              "array",
              "index",
              "toIndex"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "index",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      },
      {
        "name": "toIndex",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "byteCount",
    "start": 0,
    "end": 93,
    "length": 93,
    "raw": "export const byteCount = (s: string) => {\n  return encodeURI(s).split(/%..|./).length - 1;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/byteCount.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/byteCount.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/byteCount.ts",
      "name": "NamedParameters<typeof byteCount>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/byteCount.ts",
      "operationRelativePath": "src/byteCount.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20byteCount%3E",
        "definitions": {
          "NamedParameters<typeof byteCount>": {
            "type": "object",
            "properties": {
              "s": {
                "type": "string"
              }
            },
            "required": [
              "s"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "s",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcInterface",
    "name": "MappedObject",
    "start": 60,
    "end": 117,
    "raw": "export type MappedObject<T> = {\n  [mapKey: string]: T;\n};",
    "length": 57,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/createMappedObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/createMappedObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {
        "type": "object",
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "createMappedObject",
    "start": 576,
    "end": 1259,
    "length": 683,
    "raw": "export const createMappedObject = <T extends { [key: string]: any }, U = T>(\n  array: T[],\n  /**\n   Key to make the map from. Must be unique or it could be overwritten. Key must be a string\n   */\n  mapKey: keyof T,\n  /**\n   * If the result of the mapped object, based on the object should have mapped values, provide this mapfunction to get them.\n   */\n  mapFn?: (value: T, array: T[]) => U,\n): MappedObject<U> => {\n  const mappedObject = mergeObjectsArray(\n    array.map((item) => {\n      const key: string = item[mapKey];\n      const value = mapFn ? mapFn(item, array) : (item as unknown as U);\n\n      return {\n        [key]: value,\n      };\n    }),\n  );\n\n  return mappedObject;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/createMappedObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/createMappedObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/createMappedObject.ts",
      "name": "NamedParameters<typeof createMappedObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/createMappedObject.ts",
      "operationRelativePath": "src/createMappedObject.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20createMappedObject%3E",
        "definitions": {
          "NamedParameters<typeof createMappedObject>": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {}
              },
              "mapKey": {
                "description": "Key to make the map from. Must be unique or it could be overwritten. Key must be a string"
              },
              "mapFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                },
                "description": "If the result of the mapped object, based on the object should have mapped values, provide this mapfunction to get them."
              }
            },
            "required": [
              "array",
              "mapKey"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "mapKey",
        "schema": {
          "description": "Key to make the map from. Must be unique or it could be overwritten. Key must be a string"
        },
        "simplifiedSchema": {
          "fullComment": "Key to make the map from. Must be unique or it could be overwritten. Key must be a string",
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "mapFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          },
          "description": "If the result of the mapped object, based on the object should have mapped values, provide this mapfunction to get them."
        },
        "simplifiedSchema": {
          "fullComment": "If the result of the mapped object, based on the object should have mapped values, provide this mapfunction to get them.",
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "createMappedKeysObject",
    "start": 1327,
    "end": 1521,
    "length": 194,
    "raw": "export const createMappedKeysObject = <T,>(\n  keys: string[],\n  map: (key: string) => T,\n) => {\n  const result = mergeObjectsArray(keys.map((key) => ({ [key]: map(key) })));\n\n  return result;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/createMappedObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/createMappedObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/createMappedObject.ts",
      "name": "NamedParameters<typeof createMappedKeysObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/createMappedObject.ts",
      "operationRelativePath": "src/createMappedObject.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20createMappedKeysObject%3E",
        "definitions": {
          "NamedParameters<typeof createMappedKeysObject>": {
            "type": "object",
            "properties": {
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "map": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "keys",
              "map"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "keys",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "string"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "map",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "createPromisedMappedKeysObject",
    "start": 1589,
    "end": 1846,
    "length": 257,
    "raw": "export const createPromisedMappedKeysObject = async <T,>(\n  keys: string[],\n  map: (key: string) => Promise<T>,\n) => {\n  const result = mergeObjectsArray(\n    await Promise.all(keys.map(async (key) => ({ [key]: await map(key) }))),\n  );\n\n  return result;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/createMappedObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/createMappedObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/createMappedObject.ts",
      "name": "NamedParameters<typeof createPromisedMappedKeysObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/createMappedObject.ts",
      "operationRelativePath": "src/createMappedObject.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20createPromisedMappedKeysObject%3E",
        "definitions": {
          "NamedParameters<typeof createPromisedMappedKeysObject>": {
            "type": "object",
            "properties": {
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "map": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "keys",
              "map"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "keys",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "string"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "map",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "destructureOptionalObject",
    "start": 0,
    "end": 186,
    "length": 186,
    "raw": "export const destructureOptionalObject = <T extends { [key: string]: any }>(\n  object: T | null | undefined\n): Partial<T> => {\n  if (!object) return {} as Partial<T>;\n  return object;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/destructureOptionalObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/destructureOptionalObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/destructureOptionalObject.ts",
      "name": "NamedParameters<typeof destructureOptionalObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/destructureOptionalObject.ts",
      "operationRelativePath": "src/destructureOptionalObject.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "earthDistance",
    "start": 0,
    "end": 478,
    "length": 478,
    "raw": "export function earthDistance(\n  lat1: number,\n  long1: number,\n  lat2: number,\n  long2: number,\n  response?: \"m\" | \"km\"\n) {\n  const m = Math.PI / 180;\n\n  lat1 = lat1 * m;\n  long1 = long1 * m;\n  lat2 = lat2 * m;\n  long2 = long2 * m;\n\n  var R = 6371e3; // metres of earth radius\n\n  var x = (long2 - long1) * Math.cos((lat1 + lat2) / 2);\n  var y = lat2 - lat1;\n\n  var d = Math.sqrt(x * x + y * y) * R;\n\n  return response === \"m\" ? Math.round(d / 10) * 10 : Math.round(d / 1000);\n}",
    "rawBodyCode": "{\n  const m = Math.PI / 180;\n\n  lat1 = lat1 * m;\n  long1 = long1 * m;\n  lat2 = lat2 * m;\n  long2 = long2 * m;\n\n  var R = 6371e3; // metres of earth radius\n\n  var x = (long2 - long1) * Math.cos((lat1 + lat2) / 2);\n  var y = lat2 - lat1;\n\n  var d = Math.sqrt(x * x + y * y) * R;\n\n  return response === \"m\" ? Math.round(d / 10) * 10 : Math.round(d / 1000);\n}",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/earthDistance.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/earthDistance.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/earthDistance.ts",
      "name": "NamedParameters<typeof earthDistance>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/earthDistance.ts",
      "operationRelativePath": "src/earthDistance.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20earthDistance%3E",
        "definitions": {
          "NamedParameters<typeof earthDistance>": {
            "type": "object",
            "properties": {
              "lat1": {
                "type": "number"
              },
              "long1": {
                "type": "number"
              },
              "lat2": {
                "type": "number"
              },
              "long2": {
                "type": "number"
              },
              "response": {
                "type": "string",
                "enum": [
                  "m",
                  "km"
                ]
              }
            },
            "required": [
              "lat1",
              "long1",
              "lat2",
              "long2"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "lat1",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      },
      {
        "name": "long1",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      },
      {
        "name": "lat2",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      },
      {
        "name": "long2",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      },
      {
        "name": "response",
        "schema": {
          "type": "string",
          "enum": [
            "m",
            "km"
          ]
        },
        "simplifiedSchema": {
          "enum": [
            "m",
            "km"
          ],
          "type": "string"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcVariable",
    "name": "openapis",
    "start": 107,
    "end": 163,
    "length": 56,
    "raw": "const openapis: { [url: string]: OpenapiDocument } = {};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/fetchOpenapi.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/fetchOpenapi.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs"
  },
  {
    "modelName": "SwcFunction",
    "name": "fetchOpenapi",
    "start": 203,
    "end": 873,
    "length": 670,
    "raw": "export const fetchOpenapi = async (openapiUrl: string | undefined) => {\n  if (!openapiUrl) {\n    return;\n  }\n\n  if (openapis[openapiUrl]) {\n    // NB: cached in memory\n    return openapis[openapiUrl];\n  }\n\n  const isYaml = openapiUrl.endsWith(\".yaml\");\n\n  const { json, status, statusText, text } =\n    await fetchWithTimeout<OpenapiDocument>(\n      openapiUrl,\n      {\n        headers: isYaml\n          ? undefined\n          : {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n      },\n      30000,\n    );\n\n  if (json) {\n    // NB: set cache\n    openapis[openapiUrl] = json;\n  }\n\n  return json || undefined;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/fetchOpenapi.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/fetchOpenapi.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/fetchOpenapi.ts",
      "name": "NamedParameters<typeof fetchOpenapi>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/fetchOpenapi.ts",
      "operationRelativePath": "src/fetchOpenapi.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20fetchOpenapi%3E",
        "definitions": {
          "NamedParameters<typeof fetchOpenapi>": {
            "type": "object",
            "properties": {
              "openapiUrl": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "openapiUrl",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "fetchWithTimeout",
    "start": 260,
    "end": 745,
    "length": 485,
    "raw": "export const fetchWithTimeout = async <T extends any>(\n  input: string | Request | URL,\n  init?: RequestInit,\n  timeoutMs?: number,\n  isNoJson?: boolean,\n  isNoText?: boolean,\n) => {\n  const { status, statusText, text, response } = await fetchTextWithTimeout(\n    input,\n    init,\n    timeoutMs,\n    isNoText,\n  );\n  const json =\n    text && !isNoJson\n      ? tryParseJson<T>(text) || tryParseYamlToJson<T>(text)\n      : null;\n\n  return { text, json, status, statusText, response };\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/fetchWithTimeout.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/fetchWithTimeout.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {
      "Request": {
        "type": "object",
        "properties": {
          "body": {
            "anyOf": [
              {
                "$ref": "#/definitions/ReadableStream%3CUint8Array%3E"
              },
              {
                "type": "null"
              }
            ],
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body)"
          },
          "bodyUsed": {
            "type": "boolean",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed)"
          },
          "cache": {
            "$ref": "#/definitions/RequestCache",
            "description": "Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)"
          },
          "credentials": {
            "$ref": "#/definitions/RequestCredentials",
            "description": "Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)"
          },
          "destination": {
            "$ref": "#/definitions/RequestDestination",
            "description": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)"
          },
          "headers": {
            "$ref": "#/definitions/Headers",
            "description": "Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)"
          },
          "integrity": {
            "type": "string",
            "description": "Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)"
          },
          "keepalive": {
            "type": "boolean",
            "description": "Returns a boolean indicating whether or not request can outlive the global in which it was created.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)"
          },
          "method": {
            "type": "string",
            "description": "Returns request's HTTP method, which is \"GET\" by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)"
          },
          "mode": {
            "$ref": "#/definitions/RequestMode",
            "description": "Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)"
          },
          "redirect": {
            "$ref": "#/definitions/RequestRedirect",
            "description": "Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)"
          },
          "referrer": {
            "type": "string",
            "description": "Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)"
          },
          "referrerPolicy": {
            "$ref": "#/definitions/ReferrerPolicy",
            "description": "Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)"
          },
          "signal": {
            "$ref": "#/definitions/AbortSignal",
            "description": "Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)"
          },
          "url": {
            "type": "string",
            "description": "Returns the URL of request as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)"
          }
        },
        "required": [
          "body",
          "bodyUsed",
          "cache",
          "credentials",
          "destination",
          "headers",
          "integrity",
          "keepalive",
          "method",
          "mode",
          "redirect",
          "referrer",
          "referrerPolicy",
          "signal",
          "url"
        ],
        "additionalProperties": false,
        "description": "This Fetch API interface represents a resource request.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request)"
      },
      "ReadableStream<Uint8Array>": {
        "type": "object",
        "properties": {
          "locked": {
            "type": "boolean",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
          }
        },
        "required": [
          "locked"
        ],
        "additionalProperties": false,
        "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
      },
      "RequestCache": {
        "type": "string",
        "enum": [
          "default",
          "force-cache",
          "no-cache",
          "no-store",
          "only-if-cached",
          "reload"
        ]
      },
      "RequestCredentials": {
        "type": "string",
        "enum": [
          "include",
          "omit",
          "same-origin"
        ]
      },
      "RequestDestination": {
        "type": "string",
        "enum": [
          "",
          "audio",
          "audioworklet",
          "document",
          "embed",
          "font",
          "frame",
          "iframe",
          "image",
          "manifest",
          "object",
          "paintworklet",
          "report",
          "script",
          "sharedworker",
          "style",
          "track",
          "video",
          "worker",
          "xslt"
        ]
      },
      "Headers": {
        "type": "object",
        "additionalProperties": false
      },
      "RequestMode": {
        "type": "string",
        "enum": [
          "cors",
          "navigate",
          "no-cors",
          "same-origin"
        ]
      },
      "RequestRedirect": {
        "type": "string",
        "enum": [
          "error",
          "follow",
          "manual"
        ]
      },
      "ReferrerPolicy": {
        "type": "string",
        "enum": [
          "",
          "no-referrer",
          "no-referrer-when-downgrade",
          "origin",
          "origin-when-cross-origin",
          "same-origin",
          "strict-origin",
          "strict-origin-when-cross-origin",
          "unsafe-url"
        ]
      },
      "AbortSignal": {
        "type": "object",
        "properties": {
          "aborted": {
            "type": "boolean",
            "description": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)"
          },
          "onabort": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)"
          },
          "reason": {
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)"
          }
        },
        "required": [
          "aborted",
          "onabort",
          "reason"
        ],
        "additionalProperties": false,
        "description": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal)"
      },
      "RequestInit": {
        "type": "object",
        "properties": {
          "body": {
            "anyOf": [
              {
                "$ref": "#/definitions/BodyInit"
              },
              {
                "type": "null"
              }
            ],
            "description": "A BodyInit object or null to set request's body."
          },
          "cache": {
            "$ref": "#/definitions/RequestCache",
            "description": "A string indicating how the request will interact with the browser's cache to set request's cache."
          },
          "credentials": {
            "$ref": "#/definitions/RequestCredentials",
            "description": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
          },
          "headers": {
            "$ref": "#/definitions/HeadersInit",
            "description": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
          },
          "integrity": {
            "type": "string",
            "description": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
          },
          "keepalive": {
            "type": "boolean",
            "description": "A boolean to set request's keepalive."
          },
          "method": {
            "type": "string",
            "description": "A string to set request's method."
          },
          "mode": {
            "$ref": "#/definitions/RequestMode",
            "description": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
          },
          "redirect": {
            "$ref": "#/definitions/RequestRedirect",
            "description": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
          },
          "referrer": {
            "type": "string",
            "description": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
          },
          "referrerPolicy": {
            "$ref": "#/definitions/ReferrerPolicy",
            "description": "A referrer policy to set request's referrerPolicy."
          },
          "signal": {
            "anyOf": [
              {
                "$ref": "#/definitions/AbortSignal"
              },
              {
                "type": "null"
              }
            ],
            "description": "An AbortSignal to set request's signal."
          },
          "window": {
            "type": "null",
            "description": "Can only be null. Used to disassociate request from any Window."
          }
        },
        "additionalProperties": false
      },
      "BodyInit": {
        "anyOf": [
          {
            "$ref": "#/definitions/ReadableStream"
          },
          {
            "$ref": "#/definitions/XMLHttpRequestBodyInit"
          }
        ]
      },
      "ReadableStream": {
        "type": "object",
        "properties": {
          "locked": {
            "type": "boolean",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
          }
        },
        "required": [
          "locked"
        ],
        "additionalProperties": false,
        "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
      },
      "XMLHttpRequestBodyInit": {
        "anyOf": [
          {
            "$ref": "#/definitions/Blob"
          },
          {
            "$ref": "#/definitions/BufferSource"
          },
          {
            "$ref": "#/definitions/FormData"
          },
          {
            "$ref": "#/definitions/URLSearchParams"
          },
          {
            "type": "string"
          }
        ]
      },
      "Blob": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size)"
          },
          "type": {
            "type": "string",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type)"
          }
        },
        "required": [
          "size",
          "type"
        ],
        "additionalProperties": false,
        "description": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)"
      },
      "BufferSource": {
        "anyOf": [
          {
            "$ref": "#/definitions/ArrayBufferView"
          },
          {
            "$ref": "#/definitions/ArrayBuffer"
          }
        ]
      },
      "ArrayBufferView": {
        "type": "object",
        "properties": {
          "buffer": {
            "$ref": "#/definitions/ArrayBufferLike"
          },
          "byteLength": {
            "type": "number"
          },
          "byteOffset": {
            "type": "number"
          }
        },
        "required": [
          "buffer",
          "byteLength",
          "byteOffset"
        ],
        "additionalProperties": false
      },
      "ArrayBufferLike": {
        "$ref": "#/definitions/ArrayBuffer"
      },
      "ArrayBuffer": {
        "type": "object",
        "properties": {
          "byteLength": {
            "type": "number"
          }
        },
        "required": [
          "byteLength"
        ],
        "additionalProperties": false
      },
      "FormData": {
        "type": "object",
        "additionalProperties": false
      },
      "URLSearchParams": {
        "type": "object",
        "additionalProperties": false
      },
      "HeadersInit": {
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          {
            "$ref": "#/definitions/Record%3Cstring%2Cstring%3E"
          },
          {
            "$ref": "#/definitions/Headers"
          }
        ]
      },
      "Record<string,string>": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    },
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/fetchWithTimeout.ts",
      "name": "NamedParameters<typeof fetchWithTimeout>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/fetchWithTimeout.ts",
      "operationRelativePath": "src/fetchWithTimeout.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20fetchWithTimeout%3E",
        "definitions": {
          "NamedParameters<typeof fetchWithTimeout>": {
            "type": "object",
            "properties": {
              "input": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/definitions/Request"
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "init": {
                "$ref": "#/definitions/RequestInit"
              },
              "timeoutMs": {
                "type": "number"
              },
              "isNoJson": {
                "type": "boolean"
              },
              "isNoText": {
                "type": "boolean"
              }
            },
            "required": [
              "input"
            ],
            "additionalProperties": false
          },
          "Request": {
            "type": "object",
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/ReadableStream%3CUint8Array%3E"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body)"
              },
              "bodyUsed": {
                "type": "boolean",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed)"
              },
              "cache": {
                "$ref": "#/definitions/RequestCache",
                "description": "Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)"
              },
              "credentials": {
                "$ref": "#/definitions/RequestCredentials",
                "description": "Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)"
              },
              "destination": {
                "$ref": "#/definitions/RequestDestination",
                "description": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)"
              },
              "headers": {
                "$ref": "#/definitions/Headers",
                "description": "Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)"
              },
              "integrity": {
                "type": "string",
                "description": "Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)"
              },
              "keepalive": {
                "type": "boolean",
                "description": "Returns a boolean indicating whether or not request can outlive the global in which it was created.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)"
              },
              "method": {
                "type": "string",
                "description": "Returns request's HTTP method, which is \"GET\" by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)"
              },
              "mode": {
                "$ref": "#/definitions/RequestMode",
                "description": "Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)"
              },
              "redirect": {
                "$ref": "#/definitions/RequestRedirect",
                "description": "Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)"
              },
              "referrer": {
                "type": "string",
                "description": "Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)"
              },
              "referrerPolicy": {
                "$ref": "#/definitions/ReferrerPolicy",
                "description": "Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)"
              },
              "signal": {
                "$ref": "#/definitions/AbortSignal",
                "description": "Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)"
              },
              "url": {
                "type": "string",
                "description": "Returns the URL of request as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)"
              }
            },
            "required": [
              "body",
              "bodyUsed",
              "cache",
              "credentials",
              "destination",
              "headers",
              "integrity",
              "keepalive",
              "method",
              "mode",
              "redirect",
              "referrer",
              "referrerPolicy",
              "signal",
              "url"
            ],
            "additionalProperties": false,
            "description": "This Fetch API interface represents a resource request.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request)"
          },
          "ReadableStream<Uint8Array>": {
            "type": "object",
            "properties": {
              "locked": {
                "type": "boolean",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
              }
            },
            "required": [
              "locked"
            ],
            "additionalProperties": false,
            "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
          },
          "RequestCache": {
            "type": "string",
            "enum": [
              "default",
              "force-cache",
              "no-cache",
              "no-store",
              "only-if-cached",
              "reload"
            ]
          },
          "RequestCredentials": {
            "type": "string",
            "enum": [
              "include",
              "omit",
              "same-origin"
            ]
          },
          "RequestDestination": {
            "type": "string",
            "enum": [
              "",
              "audio",
              "audioworklet",
              "document",
              "embed",
              "font",
              "frame",
              "iframe",
              "image",
              "manifest",
              "object",
              "paintworklet",
              "report",
              "script",
              "sharedworker",
              "style",
              "track",
              "video",
              "worker",
              "xslt"
            ]
          },
          "Headers": {
            "type": "object",
            "additionalProperties": false
          },
          "RequestMode": {
            "type": "string",
            "enum": [
              "cors",
              "navigate",
              "no-cors",
              "same-origin"
            ]
          },
          "RequestRedirect": {
            "type": "string",
            "enum": [
              "error",
              "follow",
              "manual"
            ]
          },
          "ReferrerPolicy": {
            "type": "string",
            "enum": [
              "",
              "no-referrer",
              "no-referrer-when-downgrade",
              "origin",
              "origin-when-cross-origin",
              "same-origin",
              "strict-origin",
              "strict-origin-when-cross-origin",
              "unsafe-url"
            ]
          },
          "AbortSignal": {
            "type": "object",
            "properties": {
              "aborted": {
                "type": "boolean",
                "description": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)"
              },
              "onabort": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "isFunction": {
                        "type": "boolean",
                        "const": true
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)"
              },
              "reason": {
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)"
              }
            },
            "required": [
              "aborted",
              "onabort",
              "reason"
            ],
            "additionalProperties": false,
            "description": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal)"
          },
          "RequestInit": {
            "type": "object",
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/BodyInit"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "A BodyInit object or null to set request's body."
              },
              "cache": {
                "$ref": "#/definitions/RequestCache",
                "description": "A string indicating how the request will interact with the browser's cache to set request's cache."
              },
              "credentials": {
                "$ref": "#/definitions/RequestCredentials",
                "description": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
              },
              "headers": {
                "$ref": "#/definitions/HeadersInit",
                "description": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
              },
              "integrity": {
                "type": "string",
                "description": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
              },
              "keepalive": {
                "type": "boolean",
                "description": "A boolean to set request's keepalive."
              },
              "method": {
                "type": "string",
                "description": "A string to set request's method."
              },
              "mode": {
                "$ref": "#/definitions/RequestMode",
                "description": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
              },
              "redirect": {
                "$ref": "#/definitions/RequestRedirect",
                "description": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
              },
              "referrer": {
                "type": "string",
                "description": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
              },
              "referrerPolicy": {
                "$ref": "#/definitions/ReferrerPolicy",
                "description": "A referrer policy to set request's referrerPolicy."
              },
              "signal": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/AbortSignal"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "An AbortSignal to set request's signal."
              },
              "window": {
                "type": "null",
                "description": "Can only be null. Used to disassociate request from any Window."
              }
            },
            "additionalProperties": false
          },
          "BodyInit": {
            "anyOf": [
              {
                "$ref": "#/definitions/ReadableStream"
              },
              {
                "$ref": "#/definitions/XMLHttpRequestBodyInit"
              }
            ]
          },
          "ReadableStream": {
            "type": "object",
            "properties": {
              "locked": {
                "type": "boolean",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
              }
            },
            "required": [
              "locked"
            ],
            "additionalProperties": false,
            "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
          },
          "XMLHttpRequestBodyInit": {
            "anyOf": [
              {
                "$ref": "#/definitions/Blob"
              },
              {
                "$ref": "#/definitions/BufferSource"
              },
              {
                "$ref": "#/definitions/FormData"
              },
              {
                "$ref": "#/definitions/URLSearchParams"
              },
              {
                "type": "string"
              }
            ]
          },
          "Blob": {
            "type": "object",
            "properties": {
              "size": {
                "type": "number",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size)"
              },
              "type": {
                "type": "string",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type)"
              }
            },
            "required": [
              "size",
              "type"
            ],
            "additionalProperties": false,
            "description": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)"
          },
          "BufferSource": {
            "anyOf": [
              {
                "$ref": "#/definitions/ArrayBufferView"
              },
              {
                "$ref": "#/definitions/ArrayBuffer"
              }
            ]
          },
          "ArrayBufferView": {
            "type": "object",
            "properties": {
              "buffer": {
                "$ref": "#/definitions/ArrayBufferLike"
              },
              "byteLength": {
                "type": "number"
              },
              "byteOffset": {
                "type": "number"
              }
            },
            "required": [
              "buffer",
              "byteLength",
              "byteOffset"
            ],
            "additionalProperties": false
          },
          "ArrayBufferLike": {
            "$ref": "#/definitions/ArrayBuffer"
          },
          "ArrayBuffer": {
            "type": "object",
            "properties": {
              "byteLength": {
                "type": "number"
              }
            },
            "required": [
              "byteLength"
            ],
            "additionalProperties": false
          },
          "FormData": {
            "type": "object",
            "additionalProperties": false
          },
          "URLSearchParams": {
            "type": "object",
            "additionalProperties": false
          },
          "HeadersInit": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              {
                "$ref": "#/definitions/Record%3Cstring%2Cstring%3E"
              },
              {
                "$ref": "#/definitions/Headers"
              }
            ]
          },
          "Record<string,string>": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "parameters": [
      {
        "name": "input",
        "schema": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Request"
            },
            {
              "type": "string",
              "format": "uri"
            }
          ]
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "init",
        "schema": {
          "$ref": "#/definitions/RequestInit"
        },
        "simplifiedSchema": {
          "fullComment": "",
          "properties": [
            {
              "name": "body",
              "required": false,
              "schema": {
                "fullComment": "A BodyInit object or null to set request's body.",
                "properties": [],
                "type": "object"
              }
            },
            {
              "name": "cache",
              "required": false,
              "schema": {
                "enum": [
                  "default",
                  "force-cache",
                  "no-cache",
                  "no-store",
                  "only-if-cached",
                  "reload"
                ],
                "fullComment": "A string indicating how the request will interact with the browser's cache to set request's cache.\n\n",
                "type": "string"
              }
            },
            {
              "name": "credentials",
              "required": false,
              "schema": {
                "enum": [
                  "include",
                  "omit",
                  "same-origin"
                ],
                "fullComment": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials.\n\n",
                "type": "string"
              }
            },
            {
              "name": "headers",
              "required": false,
              "schema": {
                "fullComment": "A Headers object, an object literal, or an array of two-item arrays to set request's headers.\n\n",
                "properties": [],
                "type": "object"
              }
            },
            {
              "name": "integrity",
              "required": false,
              "schema": {
                "fullComment": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity.",
                "type": "string"
              }
            },
            {
              "name": "keepalive",
              "required": false,
              "schema": {
                "fullComment": "A boolean to set request's keepalive.",
                "type": "boolean"
              }
            },
            {
              "name": "method",
              "required": false,
              "schema": {
                "fullComment": "A string to set request's method.",
                "type": "string"
              }
            },
            {
              "name": "mode",
              "required": false,
              "schema": {
                "enum": [
                  "cors",
                  "navigate",
                  "no-cors",
                  "same-origin"
                ],
                "fullComment": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode.\n\n",
                "type": "string"
              }
            },
            {
              "name": "redirect",
              "required": false,
              "schema": {
                "enum": [
                  "error",
                  "follow",
                  "manual"
                ],
                "fullComment": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect.\n\n",
                "type": "string"
              }
            },
            {
              "name": "referrer",
              "required": false,
              "schema": {
                "fullComment": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer.",
                "type": "string"
              }
            },
            {
              "name": "referrerPolicy",
              "required": false,
              "schema": {
                "enum": [
                  "",
                  "no-referrer",
                  "no-referrer-when-downgrade",
                  "origin",
                  "origin-when-cross-origin",
                  "same-origin",
                  "strict-origin",
                  "strict-origin-when-cross-origin",
                  "unsafe-url"
                ],
                "fullComment": "A referrer policy to set request's referrerPolicy.\n\n",
                "type": "string"
              }
            },
            {
              "name": "signal",
              "required": false,
              "schema": {
                "fullComment": "An AbortSignal to set request's signal.",
                "properties": [],
                "type": "object"
              }
            },
            {
              "name": "window",
              "required": false,
              "schema": {
                "fullComment": "Can only be null. Used to disassociate request from any Window.",
                "type": "null"
              }
            }
          ],
          "type": "object"
        },
        "required": false
      },
      {
        "name": "timeoutMs",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": false
      },
      {
        "name": "isNoJson",
        "schema": {
          "type": "boolean"
        },
        "simplifiedSchema": {
          "type": "boolean"
        },
        "required": false
      },
      {
        "name": "isNoText",
        "schema": {
          "type": "boolean"
        },
        "simplifiedSchema": {
          "type": "boolean"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "fetchTextWithTimeout",
    "start": 747,
    "end": 1752,
    "length": 1005,
    "raw": "export const fetchTextWithTimeout = async (\n  input: string | Request | URL,\n  init?: RequestInit,\n  timeoutMs?: number,\n  isNoText?: boolean,\n) => {\n  try {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs || 300000);\n\n    const response = await fetch(input, {\n      ...init,\n      signal: controller.signal,\n    }).catch((err: any) => {\n      console.log({ err });\n      // console.log(Object.keys(err.cause));\n      return err.cause.code as string; // Error caused by fetch\n    });\n\n    clearTimeout(timeoutId);\n\n    if (typeof response === \"string\") {\n      return { statusText: response };\n    }\n\n    const status = response?.status;\n    const statusText = response?.statusText;\n    // console.log({ status, statusText });\n    const text = isNoText ? undefined : await response.text();\n\n    return { text, status, statusText, response };\n  } catch (e) {\n    return { text: undefined, status: 500, statusText: \"Catched fetch\" };\n  }\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/fetchWithTimeout.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/fetchWithTimeout.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {
      "Request": {
        "type": "object",
        "properties": {
          "body": {
            "anyOf": [
              {
                "$ref": "#/definitions/ReadableStream%3CUint8Array%3E"
              },
              {
                "type": "null"
              }
            ],
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body)"
          },
          "bodyUsed": {
            "type": "boolean",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed)"
          },
          "cache": {
            "$ref": "#/definitions/RequestCache",
            "description": "Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)"
          },
          "credentials": {
            "$ref": "#/definitions/RequestCredentials",
            "description": "Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)"
          },
          "destination": {
            "$ref": "#/definitions/RequestDestination",
            "description": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)"
          },
          "headers": {
            "$ref": "#/definitions/Headers",
            "description": "Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)"
          },
          "integrity": {
            "type": "string",
            "description": "Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)"
          },
          "keepalive": {
            "type": "boolean",
            "description": "Returns a boolean indicating whether or not request can outlive the global in which it was created.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)"
          },
          "method": {
            "type": "string",
            "description": "Returns request's HTTP method, which is \"GET\" by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)"
          },
          "mode": {
            "$ref": "#/definitions/RequestMode",
            "description": "Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)"
          },
          "redirect": {
            "$ref": "#/definitions/RequestRedirect",
            "description": "Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)"
          },
          "referrer": {
            "type": "string",
            "description": "Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)"
          },
          "referrerPolicy": {
            "$ref": "#/definitions/ReferrerPolicy",
            "description": "Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)"
          },
          "signal": {
            "$ref": "#/definitions/AbortSignal",
            "description": "Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)"
          },
          "url": {
            "type": "string",
            "description": "Returns the URL of request as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)"
          }
        },
        "required": [
          "body",
          "bodyUsed",
          "cache",
          "credentials",
          "destination",
          "headers",
          "integrity",
          "keepalive",
          "method",
          "mode",
          "redirect",
          "referrer",
          "referrerPolicy",
          "signal",
          "url"
        ],
        "additionalProperties": false,
        "description": "This Fetch API interface represents a resource request.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request)"
      },
      "ReadableStream<Uint8Array>": {
        "type": "object",
        "properties": {
          "locked": {
            "type": "boolean",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
          }
        },
        "required": [
          "locked"
        ],
        "additionalProperties": false,
        "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
      },
      "RequestCache": {
        "type": "string",
        "enum": [
          "default",
          "force-cache",
          "no-cache",
          "no-store",
          "only-if-cached",
          "reload"
        ]
      },
      "RequestCredentials": {
        "type": "string",
        "enum": [
          "include",
          "omit",
          "same-origin"
        ]
      },
      "RequestDestination": {
        "type": "string",
        "enum": [
          "",
          "audio",
          "audioworklet",
          "document",
          "embed",
          "font",
          "frame",
          "iframe",
          "image",
          "manifest",
          "object",
          "paintworklet",
          "report",
          "script",
          "sharedworker",
          "style",
          "track",
          "video",
          "worker",
          "xslt"
        ]
      },
      "Headers": {
        "type": "object",
        "additionalProperties": false
      },
      "RequestMode": {
        "type": "string",
        "enum": [
          "cors",
          "navigate",
          "no-cors",
          "same-origin"
        ]
      },
      "RequestRedirect": {
        "type": "string",
        "enum": [
          "error",
          "follow",
          "manual"
        ]
      },
      "ReferrerPolicy": {
        "type": "string",
        "enum": [
          "",
          "no-referrer",
          "no-referrer-when-downgrade",
          "origin",
          "origin-when-cross-origin",
          "same-origin",
          "strict-origin",
          "strict-origin-when-cross-origin",
          "unsafe-url"
        ]
      },
      "AbortSignal": {
        "type": "object",
        "properties": {
          "aborted": {
            "type": "boolean",
            "description": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)"
          },
          "onabort": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)"
          },
          "reason": {
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)"
          }
        },
        "required": [
          "aborted",
          "onabort",
          "reason"
        ],
        "additionalProperties": false,
        "description": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal)"
      },
      "RequestInit": {
        "type": "object",
        "properties": {
          "body": {
            "anyOf": [
              {
                "$ref": "#/definitions/BodyInit"
              },
              {
                "type": "null"
              }
            ],
            "description": "A BodyInit object or null to set request's body."
          },
          "cache": {
            "$ref": "#/definitions/RequestCache",
            "description": "A string indicating how the request will interact with the browser's cache to set request's cache."
          },
          "credentials": {
            "$ref": "#/definitions/RequestCredentials",
            "description": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
          },
          "headers": {
            "$ref": "#/definitions/HeadersInit",
            "description": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
          },
          "integrity": {
            "type": "string",
            "description": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
          },
          "keepalive": {
            "type": "boolean",
            "description": "A boolean to set request's keepalive."
          },
          "method": {
            "type": "string",
            "description": "A string to set request's method."
          },
          "mode": {
            "$ref": "#/definitions/RequestMode",
            "description": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
          },
          "redirect": {
            "$ref": "#/definitions/RequestRedirect",
            "description": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
          },
          "referrer": {
            "type": "string",
            "description": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
          },
          "referrerPolicy": {
            "$ref": "#/definitions/ReferrerPolicy",
            "description": "A referrer policy to set request's referrerPolicy."
          },
          "signal": {
            "anyOf": [
              {
                "$ref": "#/definitions/AbortSignal"
              },
              {
                "type": "null"
              }
            ],
            "description": "An AbortSignal to set request's signal."
          },
          "window": {
            "type": "null",
            "description": "Can only be null. Used to disassociate request from any Window."
          }
        },
        "additionalProperties": false
      },
      "BodyInit": {
        "anyOf": [
          {
            "$ref": "#/definitions/ReadableStream"
          },
          {
            "$ref": "#/definitions/XMLHttpRequestBodyInit"
          }
        ]
      },
      "ReadableStream": {
        "type": "object",
        "properties": {
          "locked": {
            "type": "boolean",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
          }
        },
        "required": [
          "locked"
        ],
        "additionalProperties": false,
        "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
      },
      "XMLHttpRequestBodyInit": {
        "anyOf": [
          {
            "$ref": "#/definitions/Blob"
          },
          {
            "$ref": "#/definitions/BufferSource"
          },
          {
            "$ref": "#/definitions/FormData"
          },
          {
            "$ref": "#/definitions/URLSearchParams"
          },
          {
            "type": "string"
          }
        ]
      },
      "Blob": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size)"
          },
          "type": {
            "type": "string",
            "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type)"
          }
        },
        "required": [
          "size",
          "type"
        ],
        "additionalProperties": false,
        "description": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)"
      },
      "BufferSource": {
        "anyOf": [
          {
            "$ref": "#/definitions/ArrayBufferView"
          },
          {
            "$ref": "#/definitions/ArrayBuffer"
          }
        ]
      },
      "ArrayBufferView": {
        "type": "object",
        "properties": {
          "buffer": {
            "$ref": "#/definitions/ArrayBufferLike"
          },
          "byteLength": {
            "type": "number"
          },
          "byteOffset": {
            "type": "number"
          }
        },
        "required": [
          "buffer",
          "byteLength",
          "byteOffset"
        ],
        "additionalProperties": false
      },
      "ArrayBufferLike": {
        "$ref": "#/definitions/ArrayBuffer"
      },
      "ArrayBuffer": {
        "type": "object",
        "properties": {
          "byteLength": {
            "type": "number"
          }
        },
        "required": [
          "byteLength"
        ],
        "additionalProperties": false
      },
      "FormData": {
        "type": "object",
        "additionalProperties": false
      },
      "URLSearchParams": {
        "type": "object",
        "additionalProperties": false
      },
      "HeadersInit": {
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          {
            "$ref": "#/definitions/Record%3Cstring%2Cstring%3E"
          },
          {
            "$ref": "#/definitions/Headers"
          }
        ]
      },
      "Record<string,string>": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    },
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/fetchWithTimeout.ts",
      "name": "NamedParameters<typeof fetchTextWithTimeout>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/fetchWithTimeout.ts",
      "operationRelativePath": "src/fetchWithTimeout.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20fetchTextWithTimeout%3E",
        "definitions": {
          "NamedParameters<typeof fetchTextWithTimeout>": {
            "type": "object",
            "properties": {
              "input": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/definitions/Request"
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "init": {
                "$ref": "#/definitions/RequestInit"
              },
              "timeoutMs": {
                "type": "number"
              },
              "isNoText": {
                "type": "boolean"
              }
            },
            "required": [
              "input"
            ],
            "additionalProperties": false
          },
          "Request": {
            "type": "object",
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/ReadableStream%3CUint8Array%3E"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body)"
              },
              "bodyUsed": {
                "type": "boolean",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed)"
              },
              "cache": {
                "$ref": "#/definitions/RequestCache",
                "description": "Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)"
              },
              "credentials": {
                "$ref": "#/definitions/RequestCredentials",
                "description": "Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)"
              },
              "destination": {
                "$ref": "#/definitions/RequestDestination",
                "description": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)"
              },
              "headers": {
                "$ref": "#/definitions/Headers",
                "description": "Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)"
              },
              "integrity": {
                "type": "string",
                "description": "Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)"
              },
              "keepalive": {
                "type": "boolean",
                "description": "Returns a boolean indicating whether or not request can outlive the global in which it was created.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)"
              },
              "method": {
                "type": "string",
                "description": "Returns request's HTTP method, which is \"GET\" by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)"
              },
              "mode": {
                "$ref": "#/definitions/RequestMode",
                "description": "Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)"
              },
              "redirect": {
                "$ref": "#/definitions/RequestRedirect",
                "description": "Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)"
              },
              "referrer": {
                "type": "string",
                "description": "Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)"
              },
              "referrerPolicy": {
                "$ref": "#/definitions/ReferrerPolicy",
                "description": "Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)"
              },
              "signal": {
                "$ref": "#/definitions/AbortSignal",
                "description": "Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)"
              },
              "url": {
                "type": "string",
                "description": "Returns the URL of request as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)"
              }
            },
            "required": [
              "body",
              "bodyUsed",
              "cache",
              "credentials",
              "destination",
              "headers",
              "integrity",
              "keepalive",
              "method",
              "mode",
              "redirect",
              "referrer",
              "referrerPolicy",
              "signal",
              "url"
            ],
            "additionalProperties": false,
            "description": "This Fetch API interface represents a resource request.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request)"
          },
          "ReadableStream<Uint8Array>": {
            "type": "object",
            "properties": {
              "locked": {
                "type": "boolean",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
              }
            },
            "required": [
              "locked"
            ],
            "additionalProperties": false,
            "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
          },
          "RequestCache": {
            "type": "string",
            "enum": [
              "default",
              "force-cache",
              "no-cache",
              "no-store",
              "only-if-cached",
              "reload"
            ]
          },
          "RequestCredentials": {
            "type": "string",
            "enum": [
              "include",
              "omit",
              "same-origin"
            ]
          },
          "RequestDestination": {
            "type": "string",
            "enum": [
              "",
              "audio",
              "audioworklet",
              "document",
              "embed",
              "font",
              "frame",
              "iframe",
              "image",
              "manifest",
              "object",
              "paintworklet",
              "report",
              "script",
              "sharedworker",
              "style",
              "track",
              "video",
              "worker",
              "xslt"
            ]
          },
          "Headers": {
            "type": "object",
            "additionalProperties": false
          },
          "RequestMode": {
            "type": "string",
            "enum": [
              "cors",
              "navigate",
              "no-cors",
              "same-origin"
            ]
          },
          "RequestRedirect": {
            "type": "string",
            "enum": [
              "error",
              "follow",
              "manual"
            ]
          },
          "ReferrerPolicy": {
            "type": "string",
            "enum": [
              "",
              "no-referrer",
              "no-referrer-when-downgrade",
              "origin",
              "origin-when-cross-origin",
              "same-origin",
              "strict-origin",
              "strict-origin-when-cross-origin",
              "unsafe-url"
            ]
          },
          "AbortSignal": {
            "type": "object",
            "properties": {
              "aborted": {
                "type": "boolean",
                "description": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)"
              },
              "onabort": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "isFunction": {
                        "type": "boolean",
                        "const": true
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)"
              },
              "reason": {
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)"
              }
            },
            "required": [
              "aborted",
              "onabort",
              "reason"
            ],
            "additionalProperties": false,
            "description": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal)"
          },
          "RequestInit": {
            "type": "object",
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/BodyInit"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "A BodyInit object or null to set request's body."
              },
              "cache": {
                "$ref": "#/definitions/RequestCache",
                "description": "A string indicating how the request will interact with the browser's cache to set request's cache."
              },
              "credentials": {
                "$ref": "#/definitions/RequestCredentials",
                "description": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
              },
              "headers": {
                "$ref": "#/definitions/HeadersInit",
                "description": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
              },
              "integrity": {
                "type": "string",
                "description": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
              },
              "keepalive": {
                "type": "boolean",
                "description": "A boolean to set request's keepalive."
              },
              "method": {
                "type": "string",
                "description": "A string to set request's method."
              },
              "mode": {
                "$ref": "#/definitions/RequestMode",
                "description": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
              },
              "redirect": {
                "$ref": "#/definitions/RequestRedirect",
                "description": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
              },
              "referrer": {
                "type": "string",
                "description": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
              },
              "referrerPolicy": {
                "$ref": "#/definitions/ReferrerPolicy",
                "description": "A referrer policy to set request's referrerPolicy."
              },
              "signal": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/AbortSignal"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "An AbortSignal to set request's signal."
              },
              "window": {
                "type": "null",
                "description": "Can only be null. Used to disassociate request from any Window."
              }
            },
            "additionalProperties": false
          },
          "BodyInit": {
            "anyOf": [
              {
                "$ref": "#/definitions/ReadableStream"
              },
              {
                "$ref": "#/definitions/XMLHttpRequestBodyInit"
              }
            ]
          },
          "ReadableStream": {
            "type": "object",
            "properties": {
              "locked": {
                "type": "boolean",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
              }
            },
            "required": [
              "locked"
            ],
            "additionalProperties": false,
            "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
          },
          "XMLHttpRequestBodyInit": {
            "anyOf": [
              {
                "$ref": "#/definitions/Blob"
              },
              {
                "$ref": "#/definitions/BufferSource"
              },
              {
                "$ref": "#/definitions/FormData"
              },
              {
                "$ref": "#/definitions/URLSearchParams"
              },
              {
                "type": "string"
              }
            ]
          },
          "Blob": {
            "type": "object",
            "properties": {
              "size": {
                "type": "number",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size)"
              },
              "type": {
                "type": "string",
                "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type)"
              }
            },
            "required": [
              "size",
              "type"
            ],
            "additionalProperties": false,
            "description": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)"
          },
          "BufferSource": {
            "anyOf": [
              {
                "$ref": "#/definitions/ArrayBufferView"
              },
              {
                "$ref": "#/definitions/ArrayBuffer"
              }
            ]
          },
          "ArrayBufferView": {
            "type": "object",
            "properties": {
              "buffer": {
                "$ref": "#/definitions/ArrayBufferLike"
              },
              "byteLength": {
                "type": "number"
              },
              "byteOffset": {
                "type": "number"
              }
            },
            "required": [
              "buffer",
              "byteLength",
              "byteOffset"
            ],
            "additionalProperties": false
          },
          "ArrayBufferLike": {
            "$ref": "#/definitions/ArrayBuffer"
          },
          "ArrayBuffer": {
            "type": "object",
            "properties": {
              "byteLength": {
                "type": "number"
              }
            },
            "required": [
              "byteLength"
            ],
            "additionalProperties": false
          },
          "FormData": {
            "type": "object",
            "additionalProperties": false
          },
          "URLSearchParams": {
            "type": "object",
            "additionalProperties": false
          },
          "HeadersInit": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              {
                "$ref": "#/definitions/Record%3Cstring%2Cstring%3E"
              },
              {
                "$ref": "#/definitions/Headers"
              }
            ]
          },
          "Record<string,string>": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "parameters": [
      {
        "name": "input",
        "schema": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Request"
            },
            {
              "type": "string",
              "format": "uri"
            }
          ]
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "init",
        "schema": {
          "$ref": "#/definitions/RequestInit"
        },
        "simplifiedSchema": {
          "fullComment": "",
          "properties": [
            {
              "name": "body",
              "required": false,
              "schema": {
                "fullComment": "A BodyInit object or null to set request's body.",
                "properties": [],
                "type": "object"
              }
            },
            {
              "name": "cache",
              "required": false,
              "schema": {
                "enum": [
                  "default",
                  "force-cache",
                  "no-cache",
                  "no-store",
                  "only-if-cached",
                  "reload"
                ],
                "fullComment": "A string indicating how the request will interact with the browser's cache to set request's cache.\n\n",
                "type": "string"
              }
            },
            {
              "name": "credentials",
              "required": false,
              "schema": {
                "enum": [
                  "include",
                  "omit",
                  "same-origin"
                ],
                "fullComment": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials.\n\n",
                "type": "string"
              }
            },
            {
              "name": "headers",
              "required": false,
              "schema": {
                "fullComment": "A Headers object, an object literal, or an array of two-item arrays to set request's headers.\n\n",
                "properties": [],
                "type": "object"
              }
            },
            {
              "name": "integrity",
              "required": false,
              "schema": {
                "fullComment": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity.",
                "type": "string"
              }
            },
            {
              "name": "keepalive",
              "required": false,
              "schema": {
                "fullComment": "A boolean to set request's keepalive.",
                "type": "boolean"
              }
            },
            {
              "name": "method",
              "required": false,
              "schema": {
                "fullComment": "A string to set request's method.",
                "type": "string"
              }
            },
            {
              "name": "mode",
              "required": false,
              "schema": {
                "enum": [
                  "cors",
                  "navigate",
                  "no-cors",
                  "same-origin"
                ],
                "fullComment": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode.\n\n",
                "type": "string"
              }
            },
            {
              "name": "redirect",
              "required": false,
              "schema": {
                "enum": [
                  "error",
                  "follow",
                  "manual"
                ],
                "fullComment": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect.\n\n",
                "type": "string"
              }
            },
            {
              "name": "referrer",
              "required": false,
              "schema": {
                "fullComment": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer.",
                "type": "string"
              }
            },
            {
              "name": "referrerPolicy",
              "required": false,
              "schema": {
                "enum": [
                  "",
                  "no-referrer",
                  "no-referrer-when-downgrade",
                  "origin",
                  "origin-when-cross-origin",
                  "same-origin",
                  "strict-origin",
                  "strict-origin-when-cross-origin",
                  "unsafe-url"
                ],
                "fullComment": "A referrer policy to set request's referrerPolicy.\n\n",
                "type": "string"
              }
            },
            {
              "name": "signal",
              "required": false,
              "schema": {
                "fullComment": "An AbortSignal to set request's signal.",
                "properties": [],
                "type": "object"
              }
            },
            {
              "name": "window",
              "required": false,
              "schema": {
                "fullComment": "Can only be null. Used to disassociate request from any Window.",
                "type": "null"
              }
            }
          ],
          "type": "object"
        },
        "required": false
      },
      {
        "name": "timeoutMs",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": false
      },
      {
        "name": "isNoText",
        "schema": {
          "type": "boolean"
        },
        "simplifiedSchema": {
          "type": "boolean"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "test",
    "start": 467,
    "end": 677,
    "length": 210,
    "raw": "const test = () => {\n  const arr = new Array(10000).fill(0).map((x, i) => i);\n\n  arr.reduce((previous, current) => {\n    const n = findNextId(previous);\n    console.log(n);\n    return n;\n  }, \"0\" as string);\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/findNextId.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/findNextId.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/findNextId.test.ts",
      "name": "NamedParameters<typeof test>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/findNextId.test.ts",
      "operationRelativePath": "src/findNextId.test.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20test%3E",
        "definitions": {
          "NamedParameters<typeof test>": {
            "type": "object",
            "additionalProperties": false
          }
        }
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "getNextCharacter",
    "start": 43,
    "end": 410,
    "length": 367,
    "raw": "export const getNextCharacter = (charCode: number) => {\n  if (charCode < 48) {\n    return 48;\n  }\n  if (charCode < 57) {\n    return charCode + 1;\n  }\n  if (charCode < 65) {\n    return 65;\n  }\n  if (charCode < 90) {\n    return charCode + 1;\n  }\n  if (charCode < 97) {\n    return 97;\n  }\n  if (charCode < 122) {\n    return charCode + 1;\n  }\n  // > 122\n  return null;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/findNextId.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/findNextId.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/findNextId.ts",
      "name": "NamedParameters<typeof getNextCharacter>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/findNextId.ts",
      "operationRelativePath": "src/findNextId.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getNextCharacter%3E",
        "definitions": {
          "NamedParameters<typeof getNextCharacter>": {
            "type": "object",
            "properties": {
              "charCode": {
                "type": "number"
              }
            },
            "required": [
              "charCode"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "charCode",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "charCodesToString",
    "start": 412,
    "end": 552,
    "length": 140,
    "raw": "export const charCodesToString = (charCodes: number[]) => {\n  return charCodes.map((charCode) => String.fromCharCode(charCode)).join(\"\");\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/findNextId.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/findNextId.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/findNextId.ts",
      "name": "NamedParameters<typeof charCodesToString>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/findNextId.ts",
      "operationRelativePath": "src/findNextId.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20charCodesToString%3E",
        "definitions": {
          "NamedParameters<typeof charCodesToString>": {
            "type": "object",
            "properties": {
              "charCodes": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "charCodes"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "charCodes",
        "schema": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "number"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "findNextId",
    "start": 735,
    "end": 2201,
    "length": 1466,
    "raw": "export const findNextId = (ids: string[] | string) => {\n  const sorted = makeArray(ids).sort();\n\n  const lastId = sorted.pop() || \"0\";\n\n  const charCodes = lastId.split(\"\").map((letter) => letter.charCodeAt(0));\n  const zeroCharcode = 48;\n  const zCharCode = 122;\n\n  if (charCodes.length < 6) {\n    // Base case 1: always add a 0 if its shorter than 6\n    const newCharcodes = charCodes.concat(zeroCharcode);\n    return charCodesToString(newCharcodes);\n  }\n\n  const nonZIndex = charCodes.findLastIndex((c) => c < zCharCode);\n\n  const newCharCodes =\n    nonZIndex < 5 ? charCodes.slice(0, nonZIndex + 1) : charCodes;\n\n  //console.log({ newCharCodes });\n  if (charCodes.length === 6 && nonZIndex !== -1) {\n    // Base case 2: if theres 6 and there's a nonZ index, just up that last one\n    newCharCodes[nonZIndex] = getNextCharacter(\n      newCharCodes[nonZIndex],\n    ) as number;\n\n    const newId = charCodesToString(newCharCodes);\n    return newId;\n  }\n\n  // Rest case: not sure but it works :D\n\n  const indexToIncrease = charCodes\n    .map((charCode) => getNextCharacter(charCode))\n    .findIndex((charCode) => charCode !== null);\n\n  const otherCharCodes =\n    indexToIncrease === -1\n      ? charCodes.concat(zeroCharcode)\n      : charCodes\n          .slice(0, indexToIncrease + 1)\n          .map((c, i) =>\n            i === indexToIncrease ? (getNextCharacter(c) as number) : c,\n          );\n\n  const newId = charCodesToString(otherCharCodes);\n\n  return newId;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/findNextId.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/findNextId.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/findNextId.ts",
      "name": "NamedParameters<typeof findNextId>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/findNextId.ts",
      "operationRelativePath": "src/findNextId.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20findNextId%3E",
        "definitions": {
          "NamedParameters<typeof findNextId>": {
            "type": "object",
            "properties": {
              "ids": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "required": [
              "ids"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "ids",
        "schema": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "noEmptyString",
    "start": 60,
    "end": 203,
    "length": 143,
    "raw": "export const noEmptyString = (\n  input: string | undefined,\n): string | undefined => {\n  if (input === \"\") return undefined;\n  return input;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof noEmptyString>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20noEmptyString%3E",
        "definitions": {
          "NamedParameters<typeof noEmptyString>": {
            "type": "object",
            "properties": {
              "input": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "input",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "sum",
    "start": 205,
    "end": 418,
    "length": 213,
    "raw": "export const sum = (items: number[]) => {\n  const total = items.reduce((total, num) => {\n    if (typeof num !== \"number\") {\n      console.log(\"WTF\", num);\n    }\n    return total + num;\n  }, 0);\n\n  return total;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof sum>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20sum%3E",
        "definitions": {
          "NamedParameters<typeof sum>": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "items"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "items",
        "schema": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "number"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "apply",
    "start": 689,
    "end": 856,
    "length": 167,
    "raw": "export const apply = <T extends any>(\n  functions: ((input: T) => T)[],\n  value: T,\n) => {\n  return functions.reduce((val, fn) => {\n    return fn(val);\n  }, value);\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof apply>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20apply%3E",
        "definitions": {
          "NamedParameters<typeof apply>": {
            "type": "object",
            "properties": {
              "functions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  }
                }
              },
              "value": {}
            },
            "required": [
              "functions",
              "value"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "functions",
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "isFunction": {
                "type": "boolean",
                "const": true
              }
            }
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [
                  {
                    "name": "isFunction",
                    "required": false,
                    "schema": {
                      "type": "boolean"
                    }
                  }
                ],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "value",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "createEnum",
    "start": 1132,
    "end": 1348,
    "length": 216,
    "raw": "export const createEnum = <T extends readonly string[]>(\n  array: T,\n): { [K in (typeof array)[number]]: K } =>\n  array.reduce((previous, current) => {\n    return { ...previous, [current]: current };\n  }, {} as any);",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof createEnum>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20createEnum%3E",
        "definitions": {
          "NamedParameters<typeof createEnum>": {
            "type": "object",
            "properties": {
              "array": {}
            },
            "required": [
              "array"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "groupByKey",
    "start": 1542,
    "end": 2099,
    "length": 557,
    "raw": "export const groupByKey = <T extends { [key: string]: any }>(\n  array: T[],\n  key: keyof T,\n) => {\n  return array.reduce(\n    (all, item) => {\n      const newAll = all;\n\n      const keyToUse: string = item[key as string];\n\n      const already = newAll[keyToUse];\n      if (!already) {\n        // create a new parameter in the group-object\n        newAll[item[key]] = [item];\n      } else {\n        // push to existing group-object parameter\n        newAll[item[key]].push(item);\n      }\n\n      return newAll;\n    },\n    {} as { [key: string]: T[] },\n  );\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof groupByKey>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20groupByKey%3E",
        "definitions": {
          "NamedParameters<typeof groupByKey>": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {}
              },
              "key": {}
            },
            "required": [
              "array",
              "key"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "key",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "isAllTrue",
    "start": 2155,
    "end": 2317,
    "length": 162,
    "raw": "export const isAllTrue = (array: boolean[]): boolean => {\n  const result = array.find((x) => !x);\n  //  console.log({ result });\n  return result === undefined;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof isAllTrue>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20isAllTrue%3E",
        "definitions": {
          "NamedParameters<typeof isAllTrue>": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              }
            },
            "required": [
              "array"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "boolean"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "onlyUnique",
    "start": 2466,
    "end": 2615,
    "length": 149,
    "raw": "export function onlyUnique<T extends unknown>(\n  value: T,\n  index: number,\n  self: T[],\n) {\n  return self.findIndex((v) => v === value) === index;\n}",
    "rawBodyCode": "{\n  return self.findIndex((v) => v === value) === index;\n}",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof onlyUnique>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20onlyUnique%3E",
        "definitions": {
          "NamedParameters<typeof onlyUnique>": {
            "type": "object",
            "properties": {
              "value": {},
              "index": {
                "type": "number"
              },
              "self": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "value",
              "index",
              "self"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "value",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "index",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      },
      {
        "name": "self",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "onlyUnique2",
    "start": 2981,
    "end": 3244,
    "length": 263,
    "raw": "export const onlyUnique2 =\n  <U extends unknown>(isEqualFn?: (a: U, b: U) => boolean) =>\n  <T extends U>(value: T, index: number, self: T[]) => {\n    return (\n      self.findIndex((v) => (isEqualFn ? isEqualFn(v, value) : v === value)) ===\n      index\n    );\n  };",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof onlyUnique2>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20onlyUnique2%3E",
        "definitions": {
          "NamedParameters<typeof onlyUnique2>": {
            "type": "object",
            "properties": {
              "isEqualFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "isEqualFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "onlyDuplicates",
    "start": 3292,
    "end": 3558,
    "length": 266,
    "raw": "export const onlyDuplicates =\n  <U extends unknown>(isEqualFn?: (a: U, b: U) => boolean) =>\n  <T extends U>(value: T, index: number, self: T[]) => {\n    return (\n      self.findIndex((v) => (isEqualFn ? isEqualFn(v, value) : v === value)) !==\n      index\n    );\n  };",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof onlyDuplicates>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20onlyDuplicates%3E",
        "definitions": {
          "NamedParameters<typeof onlyDuplicates>": {
            "type": "object",
            "properties": {
              "isEqualFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "isEqualFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "makeArray",
    "start": 3895,
    "end": 4223,
    "length": 328,
    "raw": "export const makeArray = <T extends unknown>(\n  ...arrayOrNotArray: (T | T[] | undefined)[]\n) => {\n  return arrayOrNotArray\n    .map((arrayOrNot) => {\n      const array: T[] = arrayOrNot\n        ? Array.isArray(arrayOrNot)\n          ? arrayOrNot\n          : [arrayOrNot]\n        : [];\n\n      return array;\n    })\n    .flat();\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof makeArray>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "takeFirst",
    "start": 4323,
    "end": 4431,
    "length": 108,
    "raw": "export const takeFirst = <T extends unknown>(arrayOrNot: T | T[]) => {\n  return makeArray(arrayOrNot)[0];\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof takeFirst>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "getObjectFromParamsString",
    "start": 4678,
    "end": 4965,
    "length": 287,
    "raw": "export const getObjectFromParamsString = (paramsString: string) =>\n  mergeObjectsArray(\n    paramsString\n      .split(\",\")\n      .map((x) => x.trim().split(\":\"))\n      .map((pair) =>\n        pair[0] && pair[1] ? { [pair[0].trim()]: pair[1] } : null,\n      )\n      .filter(notEmpty),\n  );",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof getObjectFromParamsString>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getObjectFromParamsString%3E",
        "definitions": {
          "NamedParameters<typeof getObjectFromParamsString>": {
            "type": "object",
            "properties": {
              "paramsString": {
                "type": "string"
              }
            },
            "required": [
              "paramsString"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "paramsString",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "sumObjectParameters",
    "start": 5018,
    "end": 5533,
    "length": 515,
    "raw": "export const sumObjectParameters = <TObject extends { [key: string]: number }>(\n  object1: TObject,\n  object2: TObject,\n): TObject => {\n  const objectKeys: (keyof TObject)[] = Object.keys(object1);\n  const summedObject = mergeObjectsArray(\n    objectKeys.map((key) => {\n      const summedObjectPart = { [key]: object1[key] + object2[key] };\n\n      return summedObjectPart;\n    }),\n  ) as TObject;\n  // NB: too bad we still need `as TObject` here. I would love to learn how to prevent that\n\n  return summedObject;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof sumObjectParameters>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20sumObjectParameters%3E",
        "definitions": {
          "NamedParameters<typeof sumObjectParameters>": {
            "type": "object",
            "properties": {
              "object1": {},
              "object2": {}
            },
            "required": [
              "object1",
              "object2"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object1",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "object2",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "sumAllKeys",
    "start": 5693,
    "end": 6491,
    "length": 798,
    "raw": "export const sumAllKeys = <T extends { [key: string]: number | undefined }>(\n  objectArray: T[],\n  keys: (keyof T)[],\n): T => {\n  const sumObject = objectArray.reduce(\n    (total, item) => {\n      // NB: not needed normally, but there seems to be some corrupt data here and there\n      if (!item) return total;\n      const newTotal = mergeObjectsArray(\n        keys.map((key) => {\n          const value1: number = total ? total[key] || 0 : 0;\n          const value2: number = item?.[key] || 0;\n\n          const sum =\n            (!total || total[key] === undefined) && item[key] === undefined\n              ? undefined\n              : value1 + value2;\n\n          return { [key]: sum };\n        }),\n      ) as T;\n\n      return newTotal;\n    },\n    null as null | T,\n  ) as T;\n\n  return sumObject;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof sumAllKeys>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20sumAllKeys%3E",
        "definitions": {
          "NamedParameters<typeof sumAllKeys>": {
            "type": "object",
            "properties": {
              "objectArray": {
                "type": "array",
                "items": {}
              },
              "keys": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "objectArray",
              "keys"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "objectArray",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "keys",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "notEmpty",
    "start": 6581,
    "end": 6737,
    "length": 156,
    "raw": "export function notEmpty<TValue extends unknown>(\n  value: TValue | null | undefined,\n): value is TValue {\n  return value !== null && value !== undefined;\n}",
    "rawBodyCode": "{\n  return value !== null && value !== undefined;\n}",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/general.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/general.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/general.ts",
      "name": "NamedParameters<typeof notEmpty>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/general.ts",
      "operationRelativePath": "src/general.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "generateDateId",
    "start": 67,
    "end": 201,
    "length": 134,
    "raw": "export const generateDateId = () => {\n  return (\n    new Date(Date.now()).toISOString().slice(0, -8) + generateRandomString(3)\n  );\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/generateDateId.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/generateDateId.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/generateDateId.ts",
      "name": "NamedParameters<typeof generateDateId>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/generateDateId.ts",
      "operationRelativePath": "src/generateDateId.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20generateDateId%3E",
        "definitions": {
          "NamedParameters<typeof generateDateId>": {
            "type": "object",
            "additionalProperties": false
          }
        }
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "generateRandomString",
    "start": 0,
    "end": 470,
    "length": 470,
    "raw": "export const generateRandomString = (length: number) => {\n  const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const characterArray = \"x\".repeat(length).split(\"\");\n\n  const string: string = characterArray\n    .map(() => {\n      const randomIndex = Math.floor(Math.random() * characters.length); //0-63 --> index for above\n      const character = characters.charAt(randomIndex);\n      return character;\n    })\n    .join(\"\");\n\n  return string;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/generateRandomString.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/generateRandomString.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/generateRandomString.ts",
      "name": "NamedParameters<typeof generateRandomString>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/generateRandomString.ts",
      "operationRelativePath": "src/generateRandomString.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20generateRandomString%3E",
        "definitions": {
          "NamedParameters<typeof generateRandomString>": {
            "type": "object",
            "properties": {
              "length": {
                "type": "number"
              }
            },
            "required": [
              "length"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "length",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "generateId",
    "start": 625,
    "end": 718,
    "length": 93,
    "raw": "export const generateId = (): string => {\n  return generateRandomString(24).toLowerCase();\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/generateRandomString.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/generateRandomString.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/generateRandomString.ts",
      "name": "NamedParameters<typeof generateId>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/generateRandomString.ts",
      "operationRelativePath": "src/generateRandomString.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20generateId%3E",
        "definitions": {
          "NamedParameters<typeof generateId>": {
            "type": "object",
            "additionalProperties": false
          }
        }
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "generatePassword",
    "start": 785,
    "end": 901,
    "length": 116,
    "raw": "export const generatePassword = (passwordLength: number = 14) => {\n  return generateRandomString(passwordLength);\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/generateRandomString.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/generateRandomString.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/generateRandomString.ts",
      "name": "NamedParameters<typeof generatePassword>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/generateRandomString.ts",
      "operationRelativePath": "src/generateRandomString.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20generatePassword%3E",
        "definitions": {
          "NamedParameters<typeof generatePassword>": {
            "type": "object",
            "properties": {
              "passwordLength": {
                "type": "number"
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "passwordLength",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getCurrentDate",
    "start": 0,
    "end": 351,
    "length": 351,
    "raw": "export const getCurrentDate = (date = new Date()) => {\n  const month = date.getMonth() + 1;\n  const monthString = month < 10 ? `0${month}` : month;\n\n  const dateDay = date.getDate();\n  const dateDayString = dateDay < 10 ? `0${dateDay}` : dateDay;\n\n  const currentDate = `${date.getFullYear()}-${monthString}-${dateDayString}`;\n  return currentDate;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getCurrentDate.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getCurrentDate.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getCurrentDate.ts",
      "name": "NamedParameters<typeof getCurrentDate>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getCurrentDate.ts",
      "operationRelativePath": "src/getCurrentDate.ts",
      "error": "TypeError: Invalid value used as weak map key"
    }
  },
  {
    "modelName": "SwcVariable",
    "name": "getDatesArray",
    "start": 99,
    "end": 393,
    "length": 294,
    "raw": "export const getDatesArray = function (startDate: number, untilDate: number) {\n  const datesArray: string[] = [];\n  for (\n    let dt = new Date(startDate);\n    dt <= new Date(untilDate);\n    dt.setDate(dt.getDate() + 1)\n  ) {\n    datesArray.push(getCurrentDate(dt));\n  }\n  return datesArray;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getDatesArray.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getDatesArray.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs"
  },
  {
    "modelName": "SwcFunction",
    "name": "getFirstEmoji",
    "start": 38,
    "end": 172,
    "length": 134,
    "raw": "export const getFirstEmoji = (text?: string): string | undefined => {\n  if (!text) return;\n  return text?.match(emojiRegex())?.[0];\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getFirstEmoji.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getFirstEmoji.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getFirstEmoji.ts",
      "name": "NamedParameters<typeof getFirstEmoji>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getFirstEmoji.ts",
      "operationRelativePath": "src/getFirstEmoji.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getFirstEmoji%3E",
        "definitions": {
          "NamedParameters<typeof getFirstEmoji>": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "text",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getHumanReadableAgoTime",
    "start": 0,
    "end": 354,
    "length": 354,
    "raw": "export const getHumanReadableAgoTime = (unixTime: number) => {\n  const timeAgo = Date.now() - unixTime;\n\n  const daysAgo = timeAgo / 86400000;\n\n  if (daysAgo < 1) {\n    const hoursAgo = daysAgo * 24;\n    if (hoursAgo < 1) {\n      return \"just now\";\n    }\n    return `${Math.round(hoursAgo)} hours ago`;\n  }\n\n  return `${Math.round(daysAgo)} days ago`;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getHumanReadableAgoTime.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getHumanReadableAgoTime.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getHumanReadableAgoTime.ts",
      "name": "NamedParameters<typeof getHumanReadableAgoTime>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getHumanReadableAgoTime.ts",
      "operationRelativePath": "src/getHumanReadableAgoTime.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getHumanReadableAgoTime%3E",
        "definitions": {
          "NamedParameters<typeof getHumanReadableAgoTime>": {
            "type": "object",
            "properties": {
              "unixTime": {
                "type": "number"
              }
            },
            "required": [
              "unixTime"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "unixTime",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getHumanReadableDatetime",
    "start": 0,
    "end": 1342,
    "length": 1342,
    "raw": "export const getHumanReadableDatetime = (unixTime: number): string => {\n  if (unixTime === 0) {\n    return \"\";\n  }\n  const dateObject = new Date(unixTime);\n  const nowDate = new Date(Date.now());\n  const yesterdayDate = new Date(Date.now() - 86400000);\n  const msAgo = Date.now() - unixTime;\n  const isToday =\n    msAgo < 86400000 && nowDate.getDate() === dateObject.getDate();\n  const isYesterday =\n    msAgo < 86400000 * 2 && yesterdayDate.getDate() === dateObject.getDate();\n\n  const isThisWeek = msAgo < 86400000 * 7;\n\n  if (isToday) {\n    // NB: if it's today, just show the time\n    const hours = dateObject.getHours();\n    const hoursString = hours < 10 ? `0${hours}` : hours;\n    const minutes = dateObject.getMinutes();\n    const minutesString = minutes < 10 ? `0${minutes}` : minutes;\n    return `${hoursString}:${minutesString}`;\n  }\n\n  if (isYesterday) {\n    return `Yesterday`;\n  }\n\n  if (isThisWeek) {\n    return [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n      \"Sunday\",\n    ][dateObject.getDay()];\n  }\n\n  const month = dateObject.getMonth() + 1;\n  const monthString = month < 10 ? `0${month}` : month;\n  const date = dateObject.getDate();\n  const dateString = date < 10 ? `0${date}` : date;\n\n  return `${dateString}/${monthString}/${dateObject.getFullYear()}`;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getHumanReadableDatetime.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getHumanReadableDatetime.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getHumanReadableDatetime.ts",
      "name": "NamedParameters<typeof getHumanReadableDatetime>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getHumanReadableDatetime.ts",
      "operationRelativePath": "src/getHumanReadableDatetime.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getHumanReadableDatetime%3E",
        "definitions": {
          "NamedParameters<typeof getHumanReadableDatetime>": {
            "type": "object",
            "properties": {
              "unixTime": {
                "type": "number"
              }
            },
            "required": [
              "unixTime"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "unixTime",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getNumberOfLines",
    "start": 0,
    "end": 92,
    "length": 92,
    "raw": "export const getNumberOfLines = (string: string) => {\n  return string.split(\"\\n\").length;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getNumberOfLines.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getNumberOfLines.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getNumberOfLines.ts",
      "name": "NamedParameters<typeof getNumberOfLines>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getNumberOfLines.ts",
      "operationRelativePath": "src/getNumberOfLines.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getNumberOfLines%3E",
        "definitions": {
          "NamedParameters<typeof getNumberOfLines>": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string"
              }
            },
            "required": [
              "string"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "string",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getObjectKeysArray",
    "start": 0,
    "end": 169,
    "length": 169,
    "raw": "export const getObjectKeysArray = <TObject extends { [key: string]: any }>(\n  object: TObject\n) => {\n  return Object.keys(object) as Extract<keyof TObject, string>[];\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getObjectKeysArray.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getObjectKeysArray.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getObjectKeysArray.ts",
      "name": "NamedParameters<typeof getObjectKeysArray>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getObjectKeysArray.ts",
      "operationRelativePath": "src/getObjectKeysArray.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getObjectKeysArray%3E",
        "definitions": {
          "NamedParameters<typeof getObjectKeysArray>": {
            "type": "object",
            "properties": {
              "object": {}
            },
            "required": [
              "object"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getParameterAtLocation",
    "start": 0,
    "end": 284,
    "length": 284,
    "raw": "export const getParameterAtLocation = <T = any>(\n  object: { [key: string]: any },\n  location: string[]\n): T => {\n  const firstParameter = object[location[0]];\n\n  if (location.length === 1) return firstParameter;\n\n  return getParameterAtLocation(firstParameter, location.slice(1));\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getParameterAtLocation.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getParameterAtLocation.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getParameterAtLocation.ts",
      "name": "NamedParameters<typeof getParameterAtLocation>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getParameterAtLocation.ts",
      "operationRelativePath": "src/getParameterAtLocation.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getParameterAtLocation%3E",
        "definitions": {
          "NamedParameters<typeof getParameterAtLocation>": {
            "type": "object",
            "properties": {
              "object": {
                "type": "object"
              },
              "location": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "object",
              "location"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {
          "type": "object"
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "location",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "string"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getQueryPath",
    "start": 40,
    "end": 290,
    "length": 250,
    "raw": "export const getQueryPath = (parsedUrlQuery: ParsedUrlQuery | undefined) => {\n  const paths = parsedUrlQuery?.paths;\n  const queryPath = Array.isArray(paths)\n    ? paths.join(\"/\")\n    : paths === undefined\n    ? \"\"\n    : paths;\n  return queryPath;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getQueryPath.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getQueryPath.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {
      "ParsedUrlQuery": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "not": {}
            }
          ]
        }
      }
    },
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getQueryPath.ts",
      "name": "NamedParameters<typeof getQueryPath>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getQueryPath.ts",
      "operationRelativePath": "src/getQueryPath.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getQueryPath%3E",
        "definitions": {
          "NamedParameters<typeof getQueryPath>": {
            "type": "object",
            "properties": {
              "parsedUrlQuery": {
                "$ref": "#/definitions/ParsedUrlQuery"
              }
            },
            "additionalProperties": false
          },
          "ParsedUrlQuery": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "not": {}
                }
              ]
            }
          }
        }
      }
    },
    "parameters": [
      {
        "name": "parsedUrlQuery",
        "schema": {
          "$ref": "#/definitions/ParsedUrlQuery"
        },
        "simplifiedSchema": {
          "fullComment": "",
          "properties": [],
          "type": "object"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getStringSizeSummary",
    "start": 196,
    "end": 582,
    "length": 386,
    "raw": "export const getStringSizeSummary = (string: string): SizeSummary => {\n  const characters = string.length;\n  const lines = string.split(\"\\n\").length;\n  const bytes = byteCount(string);\n  return {\n    characters,\n    lines,\n    bytes,\n    bytesPerCharacter: bytes / characters,\n    charactersPerLine: Math.round(characters / lines),\n    linesPerFile: lines,\n    numberOfFiles: 1,\n  };\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getStringSizeSummary.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getStringSizeSummary.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getStringSizeSummary.ts",
      "name": "NamedParameters<typeof getStringSizeSummary>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getStringSizeSummary.ts",
      "operationRelativePath": "src/getStringSizeSummary.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getStringSizeSummary%3E",
        "definitions": {
          "NamedParameters<typeof getStringSizeSummary>": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string"
              }
            },
            "required": [
              "string"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "string",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getSubsetFromObject",
    "start": 0,
    "end": 302,
    "length": 302,
    "raw": "export const getSubsetFromObject = <T, K extends readonly (keyof T)[]>(\n  object: T,\n  keys: K\n) => {\n  type Subset = typeof keys[number];\n\n  const subsetObject = keys.reduce((obj, key) => {\n    return { ...obj, [key]: object[key] };\n  }, {} as Partial<T>) as Pick<T, Subset>;\n  return subsetObject;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getSubsetFromObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getSubsetFromObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getSubsetFromObject.ts",
      "name": "NamedParameters<typeof getSubsetFromObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getSubsetFromObject.ts",
      "operationRelativePath": "src/getSubsetFromObject.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getSubsetFromObject%3E",
        "definitions": {
          "NamedParameters<typeof getSubsetFromObject>": {
            "type": "object",
            "properties": {
              "object": {},
              "keys": {}
            },
            "required": [
              "object",
              "keys"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "keys",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "getYoutubeId",
    "start": 0,
    "end": 306,
    "length": 306,
    "raw": "export const getYoutubeId = (url: string | undefined): string | undefined => {\n  if (!url) return;\n\n  const regExp =\n    /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\n  const match = url.match(regExp);\n\n  if (match && match[2].length == 11) {\n    return match[2];\n  }\n  return;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/getYoutubeId.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/getYoutubeId.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/getYoutubeId.ts",
      "name": "NamedParameters<typeof getYoutubeId>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/getYoutubeId.ts",
      "operationRelativePath": "src/getYoutubeId.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20getYoutubeId%3E",
        "definitions": {
          "NamedParameters<typeof getYoutubeId>": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "url",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "hasAllLetters",
    "start": 0,
    "end": 325,
    "length": 325,
    "raw": "export const hasAllLetters = (a: string, b: string) => {\n  const lettersLeft = a\n    .split(\"\")\n    .reduce((lettersLeft, lowercaseValueLetter) => {\n      if (lettersLeft[0] === lowercaseValueLetter) {\n        lettersLeft.shift();\n      }\n\n      return lettersLeft;\n    }, b.split(\"\"));\n\n  return lettersLeft.length === 0;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/hasAllLetters.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/hasAllLetters.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/hasAllLetters.ts",
      "name": "NamedParameters<typeof hasAllLetters>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/hasAllLetters.ts",
      "operationRelativePath": "src/hasAllLetters.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20hasAllLetters%3E",
        "definitions": {
          "NamedParameters<typeof hasAllLetters>": {
            "type": "object",
            "properties": {
              "a": {
                "type": "string"
              },
              "b": {
                "type": "string"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "a",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      },
      {
        "name": "b",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "hashCode",
    "start": 0,
    "end": 384,
    "length": 384,
    "raw": "export const hashCode = (string: string | undefined) => {\n  if (!string) {\n    return -1;\n  }\n  var hash = 0,\n    i,\n    chr;\n  if (string.length === 0) return hash;\n  for (i = 0; i < string.length; i++) {\n    chr = string.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  // this ensures it's always positive\n  return hash >>> 0;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/hashCode.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/hashCode.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/hashCode.ts",
      "name": "NamedParameters<typeof hashCode>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/hashCode.ts",
      "operationRelativePath": "src/hashCode.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20hashCode%3E",
        "definitions": {
          "NamedParameters<typeof hashCode>": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "string",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "isAbsoluteImport",
    "start": 0,
    "end": 125,
    "length": 125,
    "raw": "export const isAbsoluteImport = (moduleString: string | undefined) =>\n  moduleString ? !moduleString.startsWith(\".\") : false;",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/isAbsoluteImport.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/isAbsoluteImport.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/isAbsoluteImport.ts",
      "name": "NamedParameters<typeof isAbsoluteImport>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/isAbsoluteImport.ts",
      "operationRelativePath": "src/isAbsoluteImport.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20isAbsoluteImport%3E",
        "definitions": {
          "NamedParameters<typeof isAbsoluteImport>": {
            "type": "object",
            "properties": {
              "moduleString": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "moduleString",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "isArrayEqual",
    "start": 0,
    "end": 204,
    "length": 204,
    "raw": "export const isArrayEqual = (a: any[], b: any[]): boolean => {\n  return (\n    Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === b.length &&\n    a.every((val, index) => val === b[index])\n  );\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/isArrayEqual.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/isArrayEqual.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/isArrayEqual.ts",
      "name": "NamedParameters<typeof isArrayEqual>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/isArrayEqual.ts",
      "operationRelativePath": "src/isArrayEqual.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20isArrayEqual%3E",
        "definitions": {
          "NamedParameters<typeof isArrayEqual>": {
            "type": "object",
            "properties": {
              "a": {
                "type": "array",
                "items": {}
              },
              "b": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "a",
              "b"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "a",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "b",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "isPhoneNumber",
    "start": 0,
    "end": 186,
    "length": 186,
    "raw": "export const isPhoneNumber = (phoneNumber: string) => {\n  const match = phoneNumber.match(\n    /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/\n  )?.[0];\n\n  return !!match;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/isPhoneNumber.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/isPhoneNumber.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/isPhoneNumber.ts",
      "name": "NamedParameters<typeof isPhoneNumber>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/isPhoneNumber.ts",
      "operationRelativePath": "src/isPhoneNumber.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20isPhoneNumber%3E",
        "definitions": {
          "NamedParameters<typeof isPhoneNumber>": {
            "type": "object",
            "properties": {
              "phoneNumber": {
                "type": "string"
              }
            },
            "required": [
              "phoneNumber"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "phoneNumber",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "isUrl",
    "start": 0,
    "end": 162,
    "length": 162,
    "raw": "export const isUrl = (urlOrPath: string) => {\n  if (urlOrPath.startsWith(\"http://\") || urlOrPath.startsWith(\"https://\")) {\n    return true;\n  }\n  return false;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/isUrl.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/isUrl.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "config": {
      "isPublic": true,
      "categories": [
        "util"
      ],
      "emoji": "🔗",
      "shortDescription": "Check if something is an url"
    },
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/isUrl.ts",
      "name": "NamedParameters<typeof isUrl>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/isUrl.ts",
      "operationRelativePath": "src/isUrl.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20isUrl%3E",
        "definitions": {
          "NamedParameters<typeof isUrl>": {
            "type": "object",
            "properties": {
              "urlOrPath": {
                "type": "string"
              }
            },
            "required": [
              "urlOrPath"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "urlOrPath",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "mapAsync",
    "start": 0,
    "end": 177,
    "length": 177,
    "raw": "export const mapAsync = <T, U>(\n  array: T[],\n  callback: (value: T, index: number, array: T[]) => Promise<U>\n) => {\n  const u = Promise.all(array.map(callback));\n  return u;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapAsync.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapAsync.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mapAsync.ts",
      "name": "NamedParameters<typeof mapAsync>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mapAsync.ts",
      "operationRelativePath": "src/mapAsync.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20mapAsync%3E",
        "definitions": {
          "NamedParameters<typeof mapAsync>": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {}
              },
              "callback": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "array",
              "callback"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "callback",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "concatenate",
    "start": 40,
    "end": 108,
    "length": 68,
    "raw": "const concatenate = async (letter: string) => `${letter}+${letter}`;",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapMany.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapMany.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mapMany.test.ts",
      "name": "NamedParameters<typeof concatenate>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mapMany.test.ts",
      "operationRelativePath": "src/mapMany.test.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20concatenate%3E",
        "definitions": {
          "NamedParameters<typeof concatenate>": {
            "type": "object",
            "properties": {
              "letter": {
                "type": "string"
              }
            },
            "required": [
              "letter"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "letter",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "main",
    "start": 110,
    "end": 1401,
    "length": 1291,
    "raw": "const main = async () => {\n  const urls = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"a\",\n    \"a\",\n    \"b\",\n  ];\n  console.log(\"Normal map with unlimited concurrency\");\n  console.time(\"normalmap\");\n  const results1 = await Promise.all(urls.map(concatenate));\n  console.timeEnd(\"normalmap\");\n\n  console.log(\"Map many with 10 concurrency\");\n  console.time(\"mapMany\");\n  const results2 = await mapMany(urls, concatenate, 10);\n  console.timeEnd(\"mapMany\");\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapMany.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapMany.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mapMany.test.ts",
      "name": "NamedParameters<typeof main>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mapMany.test.ts",
      "operationRelativePath": "src/mapMany.test.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20main%3E",
        "definitions": {
          "NamedParameters<typeof main>": {
            "type": "object",
            "additionalProperties": false
          }
        }
      }
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "MapFn",
    "start": 0,
    "end": 76,
    "raw": "export type MapFn<T, U> = (currentValue: T, index: number, array: T[]) => U;",
    "length": 76,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapMany.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapMany.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {
        "type": "object",
        "properties": {
          "isFunction": {
            "type": "boolean",
            "const": true
          }
        }
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "isFunction",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "type": "object"
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "mapItem",
    "start": 78,
    "end": 465,
    "length": 387,
    "raw": "const mapItem = async <T, U>(\n  mapFn: MapFn<T, U>,\n  currentValue: T,\n  index: number,\n  array: T[]\n): Promise<{\n  status: \"fulfilled\" | \"rejected\";\n  value?: U;\n  reason?: unknown;\n}> => {\n  try {\n    return {\n      status: \"fulfilled\",\n      value: await mapFn(currentValue, index, array),\n    };\n  } catch (reason) {\n    return {\n      status: \"rejected\",\n      reason,\n    };\n  }\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapMany.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapMany.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mapMany.ts",
      "name": "NamedParameters<typeof mapItem>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mapMany.ts",
      "operationRelativePath": "src/mapMany.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "worker",
    "start": 467,
    "end": 1097,
    "length": 630,
    "raw": "async function worker(\n  id: number,\n  generator: ArrayGenerator,\n  mapFn: MapFn<any, any>,\n  result: any[]\n) {\n  //console.time(`Worker ${id}`);\n  for (let [currentValue, index, array] of generator) {\n    //console.time(`Worker ${id} --- index ${index} item ${currentValue}`);\n\n    const mappedResult = await mapItem(mapFn, currentValue, index, array);\n\n    // NB: if mappedResult gets rejected, change nothing!\n    if (mappedResult.status === \"fulfilled\") {\n      result[index] = mappedResult.value;\n    }\n\n    //console.timeEnd(`Worker ${id} --- index ${index} item ${currentValue}`);\n  }\n  //console.timeEnd(`Worker ${id}`);\n}",
    "rawBodyCode": "{\n  //console.time(`Worker ${id}`);\n  for (let [currentValue, index, array] of generator) {\n    //console.time(`Worker ${id} --- index ${index} item ${currentValue}`);\n\n    const mappedResult = await mapItem(mapFn, currentValue, index, array);\n\n    // NB: if mappedResult gets rejected, change nothing!\n    if (mappedResult.status === \"fulfilled\") {\n      result[index] = mappedResult.value;\n    }\n\n    //console.timeEnd(`Worker ${id} --- index ${index} item ${currentValue}`);\n  }\n  //console.timeEnd(`Worker ${id}`);\n}",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapMany.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapMany.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {
      "ArrayGenerator": {
        "$ref": "#/definitions/Generator%3C%5Bany%2Cnumber%2Cany%5B%5D%5D%2Cvoid%2Cunknown%3E"
      },
      "Generator<[any,number,any[]],void,unknown>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "MapFn<any,any>": {
        "type": "object",
        "properties": {
          "isFunction": {
            "type": "boolean",
            "const": true
          }
        }
      }
    },
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mapMany.ts",
      "name": "NamedParameters<typeof worker>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mapMany.ts",
      "operationRelativePath": "src/mapMany.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20worker%3E",
        "definitions": {
          "NamedParameters<typeof worker>": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "generator": {
                "$ref": "#/definitions/ArrayGenerator"
              },
              "mapFn": {
                "$ref": "#/definitions/MapFn%3Cany%2Cany%3E"
              },
              "result": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "id",
              "generator",
              "mapFn",
              "result"
            ],
            "additionalProperties": false
          },
          "ArrayGenerator": {
            "$ref": "#/definitions/Generator%3C%5Bany%2Cnumber%2Cany%5B%5D%5D%2Cvoid%2Cunknown%3E"
          },
          "Generator<[any,number,any[]],void,unknown>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {}
          },
          "MapFn<any,any>": {
            "type": "object",
            "properties": {
              "isFunction": {
                "type": "boolean",
                "const": true
              }
            }
          }
        }
      }
    },
    "parameters": [
      {
        "name": "id",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      },
      {
        "name": "generator",
        "schema": {
          "$ref": "#/definitions/ArrayGenerator"
        },
        "required": true
      },
      {
        "name": "mapFn",
        "schema": {
          "$ref": "#/definitions/MapFn%3Cany%2Cany%3E"
        },
        "required": true
      },
      {
        "name": "result",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcInterface",
    "name": "ArrayGenerator",
    "start": 1099,
    "end": 1168,
    "raw": "type ArrayGenerator = Generator<[any, number, any[]], void, unknown>;",
    "length": 69,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapMany.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapMany.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {
        "$ref": "#/definitions/Generator%3C%5Bany%2Cnumber%2Cany%5B%5D%5D%2Cvoid%2Cunknown%3E"
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "arrayGenerator",
    "start": 1245,
    "end": 1506,
    "length": 261,
    "raw": "function* arrayGenerator(array: any[]): ArrayGenerator {\n  for (let index = 0; index < array.length; index++) {\n    const currentValue = array[index];\n    const generatorTuple: [any, number, any[]] = [currentValue, index, array];\n    yield generatorTuple;\n  }\n}",
    "rawBodyCode": "{\n  for (let index = 0; index < array.length; index++) {\n    const currentValue = array[index];\n    const generatorTuple: [any, number, any[]] = [currentValue, index, array];\n    yield generatorTuple;\n  }\n}",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapMany.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapMany.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mapMany.ts",
      "name": "NamedParameters<typeof arrayGenerator>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mapMany.ts",
      "operationRelativePath": "src/mapMany.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20arrayGenerator%3E",
        "definitions": {
          "NamedParameters<typeof arrayGenerator>": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "array"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "mapMany",
    "start": 1706,
    "end": 2346,
    "length": 640,
    "raw": "export const mapMany = async <T, U>(\n  array: T[],\n  mapFn: (item: T, index: number, array: T[]) => Promise<U>,\n  /**\n   * Limit of amount of items at the same time\n   */\n  limit?: number\n): Promise<U[]> => {\n  const result: U[] = [];\n\n  if (array.length === 0) {\n    return result;\n  }\n\n  const generator = arrayGenerator(array);\n  const realLimit = Math.min(limit || array.length, array.length);\n  const workers = new Array(realLimit);\n\n  for (let i = 0; i < realLimit; i++) {\n    workers.push(worker(i, generator, mapFn, result));\n  }\n\n  // console.log(`Initialized ${limit} workers`);\n\n  await Promise.all(workers);\n\n  return result;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mapMany.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mapMany.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mapMany.ts",
      "name": "NamedParameters<typeof mapMany>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mapMany.ts",
      "operationRelativePath": "src/mapMany.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20mapMany%3E",
        "definitions": {
          "NamedParameters<typeof mapMany>": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {}
              },
              "mapFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              },
              "limit": {
                "type": "number",
                "description": "Limit of amount of items at the same time"
              }
            },
            "required": [
              "array",
              "mapFn"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "mapFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "limit",
        "schema": {
          "type": "number",
          "description": "Limit of amount of items at the same time"
        },
        "simplifiedSchema": {
          "fullComment": "Limit of amount of items at the same time",
          "type": "number"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "mergeNestedObjectTest",
    "start": 60,
    "end": 497,
    "length": 437,
    "raw": "const mergeNestedObjectTest = () => {\n  const testObject: {\n    a: string;\n    b: number;\n    c: { x: string; y: number; z: { a: string; b: number; c: { x: \"wow\" } } };\n  } = {\n    a: \"lol\",\n    b: 8,\n    c: { x: \"lol\", y: 88, z: { a: \"wow\", b: 888, c: { x: \"wow\" } } },\n  };\n\n  const result = mergeNestedObject(testObject, {\n    c: { z: { c: { x: undefined }, b: 999 } },\n  });\n\n  console.dir({ testObject, result }, { depth: 999 });\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mergeNestedObject.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mergeNestedObject.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mergeNestedObject.test.ts",
      "name": "NamedParameters<typeof mergeNestedObjectTest>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mergeNestedObject.test.ts",
      "operationRelativePath": "src/mergeNestedObject.test.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20mergeNestedObjectTest%3E",
        "definitions": {
          "NamedParameters<typeof mergeNestedObjectTest>": {
            "type": "object",
            "additionalProperties": false
          }
        }
      }
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "IsOptional",
    "start": 202,
    "end": 265,
    "raw": "export type IsOptional<T> = T extends undefined ? true : false;",
    "length": 63,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mergeNestedObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mergeNestedObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "mergeNestedObject",
    "start": 1499,
    "end": 2913,
    "length": 1414,
    "raw": "export const mergeNestedObject = <T extends O>(\n  object: T,\n  otherObject: NestedPartial<T> | undefined,\n): T => {\n  if (object === undefined && otherObject !== undefined) {\n    // basecase that is used if the original object has some optional value undefined. in that case, the otherObject is used to set that key\n    return otherObject as T;\n  }\n  if (otherObject === undefined) return object;\n  // put `otherObject` on object, make sure\n\n  // const withoutUndefinedOtherObject = omitUndefinedValues(otherObject);\n  const partialNewObject = mergeObjectsArray(\n    // go over all keys in otherObject...\n    getObjectKeysArray(otherObject).map((key) => {\n      // get the value for it\n      const otherObjectValue = otherObject[key];\n\n      //   if it's defined, but not an object.. the value is definite.\n      // NB: arrays are also objects, but in this case they should also return\n      if (\n        typeof otherObjectValue !== \"object\" ||\n        Array.isArray(otherObjectValue)\n      ) {\n        return { [key]: otherObject[key] };\n      }\n\n      //   if it's defined and its type is an object, that object needs to be merged with the full object\n      const newValue = mergeNestedObject(object[key], otherObject[key]);\n\n      return { [key]: newValue };\n    }),\n  ) as T;\n\n  //   ensure to merge the result with the original object to also do the first level\n  return { ...object, ...partialNewObject };\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mergeNestedObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mergeNestedObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mergeNestedObject.ts",
      "name": "NamedParameters<typeof mergeNestedObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mergeNestedObject.ts",
      "operationRelativePath": "src/mergeNestedObject.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "NestedPartial2",
    "start": 2915,
    "end": 3094,
    "raw": "type NestedPartial2<T> =\n  | {\n      [TKey in keyof T]?: T[TKey] extends O\n        ? NestedPartial2<T[TKey]> | null | undefined\n        : T[TKey] | undefined;\n    }\n  | undefined;",
    "length": 179,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mergeNestedObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mergeNestedObject.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false
          },
          {
            "not": {}
          }
        ]
      },
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "setNestedObject",
    "start": 4487,
    "end": 5824,
    "length": 1337,
    "raw": "export const setNestedObject = <T extends O>(\n  object: T,\n  otherObject: NestedPartial2<T>,\n  value: any,\n): T => {\n  if (object === undefined && otherObject !== undefined) {\n    // basecase that is used if the original object has some optional value undefined. in that case, the otherObject is used to set that key\n    return otherObject as T;\n  }\n  if (otherObject === undefined) return object;\n  // put `otherObject` on object, make sure\n\n  // const withoutUndefinedOtherObject = omitUndefinedValues(otherObject);\n  const partialNewObject = mergeObjectsArray(\n    // go over all keys in otherObject...\n    getObjectKeysArray(otherObject).map((key) => {\n      // get the value for it\n      const otherObjectValue = otherObject[key];\n\n      // if it's defined, but not an object.. the value is definite.\n      // NB: arrays are also objects, but in this case they should also return\n      if (otherObjectValue === null) {\n        return { [key]: value };\n      }\n\n      //   if it's defined and its type is an object, that object needs to be merged with the full object\n      const newValue = setNestedObject(object[key], otherObject[key], value);\n\n      return { [key]: newValue };\n    }),\n  ) as T;\n\n  //   ensure to merge the result with the original object to also do the first level\n  return { ...object, ...partialNewObject };\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mergeNestedObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mergeNestedObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mergeNestedObject.ts",
      "name": "NamedParameters<typeof setNestedObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mergeNestedObject.ts",
      "operationRelativePath": "src/mergeNestedObject.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "mergeObjectsArray",
    "start": 0,
    "end": 236,
    "length": 236,
    "raw": "export const mergeObjectsArray = <T extends { [key: string]: any }>(\n  objectsArray: T[]\n): T => {\n  const result = objectsArray.reduce((previous, current) => {\n    return { ...previous, ...current };\n  }, {} as T);\n\n  return result;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/mergeObjectsArray.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/mergeObjectsArray.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/mergeObjectsArray.ts",
      "name": "NamedParameters<typeof mergeObjectsArray>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/mergeObjectsArray.ts",
      "operationRelativePath": "src/mergeObjectsArray.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20mergeObjectsArray%3E",
        "definitions": {
          "NamedParameters<typeof mergeObjectsArray>": {
            "type": "object",
            "properties": {
              "objectsArray": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "objectsArray"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "objectsArray",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "flattenObjectMaps",
    "start": 198,
    "end": 273,
    "length": 75,
    "raw": "export const flattenObjectMaps = (monster: O, locatons: any[]) => {\n  //\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.test.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {
      "O": {
        "type": "object"
      }
    },
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-maps.test.ts",
      "name": "NamedParameters<typeof flattenObjectMaps>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-maps.test.ts",
      "operationRelativePath": "src/object-maps.test.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20flattenObjectMaps%3E",
        "definitions": {
          "NamedParameters<typeof flattenObjectMaps>": {
            "type": "object",
            "properties": {
              "monster": {
                "$ref": "#/definitions/O"
              },
              "locatons": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "monster",
              "locatons"
            ],
            "additionalProperties": false
          },
          "O": {
            "type": "object"
          }
        }
      }
    },
    "parameters": [
      {
        "name": "monster",
        "schema": {
          "$ref": "#/definitions/O"
        },
        "simplifiedSchema": {
          "fullComment": "",
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "locatons",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcInterface",
    "name": "OpenapiDocumentMonster",
    "start": 291,
    "end": 325,
    "raw": "type OpenapiDocumentMonster = any;",
    "length": 34,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {
        "description": "Megalith"
      },
      "simplifiedSchema": {
        "fullComment": "Megalith",
        "properties": [],
        "type": "object"
      }
    }
  },
  {
    "modelName": "SwcVariable",
    "name": "simplified",
    "start": 706,
    "end": 792,
    "length": 86,
    "raw": "const simplified = simplifyOpenapi(\n  openapiExample as unknown as OpenapiDocument,\n);",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs"
  },
  {
    "modelName": "SwcFunction",
    "name": "objectMapAsync",
    "start": 873,
    "end": 1503,
    "length": 630,
    "raw": "export const objectMapAsync = async <\n  TObject extends { [key: string]: any },\n  TResultValue,\n  TResultObject extends {\n    [key in keyof TObject]: TResultValue;\n  },\n>(\n  object: TObject,\n  mapFn: (\n    key: Extract<keyof TObject, string>,\n    value: TObject[keyof TObject],\n  ) => Promise<TResultValue>,\n): Promise<TResultObject> => {\n  const keys = getObjectKeysArray(object);\n\n  const result = mergeObjectsArray(\n    await Promise.all(\n      keys.map(async (key) => {\n        const value = object[key];\n        return { [key]: await mapFn(key, value) };\n      }),\n    ),\n  ) as unknown as TResultObject;\n\n  return result;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-maps.ts",
      "name": "NamedParameters<typeof objectMapAsync>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-maps.ts",
      "operationRelativePath": "src/object-maps.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20objectMapAsync%3E",
        "definitions": {
          "NamedParameters<typeof objectMapAsync>": {
            "type": "object",
            "properties": {
              "object": {},
              "mapFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "object",
              "mapFn"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "mapFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "objectMapSync",
    "start": 1734,
    "end": 2239,
    "length": 505,
    "raw": "export const objectMapSync = <\n  TObject extends { [key: string]: any },\n  TMapResult,\n  TResultObject extends { [key in keyof TObject]: TMapResult },\n>(\n  object: TObject,\n  mapFn: (key: keyof TObject, value: TObject[keyof TObject]) => TMapResult,\n): TResultObject => {\n  const valueObjectParts = getObjectKeysArray(object).map((key) => {\n    return { [key]: mapFn(key, object[key]) };\n  });\n\n  const merged = mergeObjectsArray(\n    valueObjectParts,\n  ) as unknown as TResultObject;\n\n  return merged;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-maps.ts",
      "name": "NamedParameters<typeof objectMapSync>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-maps.ts",
      "operationRelativePath": "src/object-maps.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20objectMapSync%3E",
        "definitions": {
          "NamedParameters<typeof objectMapSync>": {
            "type": "object",
            "properties": {
              "object": {},
              "mapFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "object",
              "mapFn"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "mapFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "objectValuesMap",
    "start": 2441,
    "end": 2771,
    "length": 330,
    "raw": "export const objectValuesMap = <\n  T extends { [key: string]: T[string] },\n  U extends unknown,\n>(\n  object: T,\n  mapFn: (key: string, value: T[string]) => U,\n): { [key: string]: U } => {\n  return Object.keys(object).reduce(function (result, key) {\n    result[key] = mapFn(key, object[key]);\n    return result;\n  }, {} as any);\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-maps.ts",
      "name": "NamedParameters<typeof objectValuesMap>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-maps.ts",
      "operationRelativePath": "src/object-maps.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20objectValuesMap%3E",
        "definitions": {
          "NamedParameters<typeof objectValuesMap>": {
            "type": "object",
            "properties": {
              "object": {},
              "mapFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "object",
              "mapFn"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "mapFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "mapValuesSync",
    "start": 2861,
    "end": 3122,
    "length": 261,
    "raw": "export const mapValuesSync = <T, U>(\n  object: { [key: string]: T },\n  mapFn: (value: T) => U,\n) => {\n  const valueObjectParts = Object.keys(object).map((key) => {\n    return { [key]: mapFn(object[key]) };\n  });\n\n  return mergeObjectsArray(valueObjectParts);\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-maps.ts",
      "name": "NamedParameters<typeof mapValuesSync>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-maps.ts",
      "operationRelativePath": "src/object-maps.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20mapValuesSync%3E",
        "definitions": {
          "NamedParameters<typeof mapValuesSync>": {
            "type": "object",
            "properties": {
              "object": {
                "type": "object",
                "additionalProperties": false
              },
              "mapFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "object",
              "mapFn"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {
          "type": "object",
          "additionalProperties": false
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "mapFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "mapKeys",
    "start": 3199,
    "end": 3670,
    "length": 471,
    "raw": "export const mapKeys = async (\n  object: { [key: string]: any },\n  mapFn: (key: string) => string | Promise<string> | undefined,\n) => {\n  const keyPairs = await Promise.all(\n    Object.keys(object).map(async (oldKey) => {\n      return { oldKey, newKey: await mapFn(oldKey) };\n    }),\n  );\n\n  return mergeObjectsArray(\n    keyPairs\n      .map((pair) => {\n        return pair.newKey ? { [pair.newKey]: object[pair.oldKey] } : null;\n      })\n      .filter(notEmpty),\n  );\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-maps.ts",
      "name": "NamedParameters<typeof mapKeys>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-maps.ts",
      "operationRelativePath": "src/object-maps.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20mapKeys%3E",
        "definitions": {
          "NamedParameters<typeof mapKeys>": {
            "type": "object",
            "properties": {
              "object": {
                "type": "object"
              },
              "mapFn": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "object",
              "mapFn"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {
          "type": "object"
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "mapFn",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "objectMapToArray",
    "start": 3738,
    "end": 4282,
    "length": 544,
    "raw": "export const objectMapToArray = <T extends O, TKey extends string>(\n  objectMap: { [key: string]: T } | undefined,\n  /** If defined will use this as propterty, otherwise will just use \"key\" */\n  keyPropertyName: TKey,\n) => {\n  const items = !objectMap\n    ? []\n    : Object.keys(objectMap).map((key) => {\n        const keyName = keyPropertyName || \"key\";\n        const keyObject = { [keyName]: key } as { [key in TKey]: string };\n\n        const newItem = { ...keyObject, ...objectMap[key] };\n        return newItem;\n      });\n  return items;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-maps.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-maps.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-maps.ts",
      "name": "NamedParameters<typeof objectMapToArray>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-maps.ts",
      "operationRelativePath": "src/object-maps.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20objectMapToArray%3E",
        "definitions": {
          "NamedParameters<typeof objectMapToArray>": {
            "type": "object",
            "properties": {
              "objectMap": {
                "type": "object",
                "additionalProperties": false
              },
              "keyPropertyName": {
                "description": "If defined will use this as propterty, otherwise will just use \"key\""
              }
            },
            "required": [
              "keyPropertyName"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "objectMap",
        "schema": {
          "type": "object",
          "additionalProperties": false
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": false
      },
      {
        "name": "keyPropertyName",
        "schema": {
          "description": "If defined will use this as propterty, otherwise will just use \"key\""
        },
        "simplifiedSchema": {
          "fullComment": "If defined will use this as propterty, otherwise will just use \"key\"",
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "mergeObjectParameters",
    "start": 357,
    "end": 719,
    "length": 362,
    "raw": "export const mergeObjectParameters = <T,>(\n  config: T | undefined,\n  defaults: T | undefined,\n) => {\n  const parameters = Object.keys({\n    ...config,\n    ...defaults,\n  }) as (keyof T)[];\n\n  const mergedConfig = parameters.reduce(\n    (getConfig, p) => ({ ...getConfig, [p]: config?.[p] || defaults?.[p] }),\n    {} as Partial<T>,\n  );\n  return mergedConfig;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-merge.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-merge.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-merge.ts",
      "name": "NamedParameters<typeof mergeObjectParameters>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-merge.ts",
      "operationRelativePath": "src/object-merge.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "mergeObjects",
    "start": 1371,
    "end": 2002,
    "length": 631,
    "raw": "export const mergeObjects = <T extends { [key: string]: any | undefined }>(\n  ...objects: (Partial<T> | undefined)[]\n): T | undefined => {\n  if (objects.length === 0) return;\n\n  const firstObject = objects[0];\n\n  const mergedObject = objects.reduce((previous, current) => {\n    if (!current) return previous;\n\n    const currentWithoutUndefined = omitUndefinedValues(current);\n\n    const newObject: Partial<T> | undefined = !previous\n      ? current\n      : { ...previous, ...currentWithoutUndefined };\n\n    return newObject;\n    // NB: we cannot guarantee this based on the input!\n  }, firstObject) as T;\n\n  return mergedObject;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/object-merge.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/object-merge.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/object-merge.ts",
      "name": "NamedParameters<typeof mergeObjects>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/object-merge.ts",
      "operationRelativePath": "src/object-merge.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "omitUndefinedValues",
    "start": 0,
    "end": 247,
    "length": 247,
    "raw": "export const omitUndefinedValues = <T extends { [key: string]: any }>(\n  object: T\n) => {\n  Object.keys(object).map((key) => {\n    const value = object[key];\n    if (value === undefined) {\n      delete object[key];\n    }\n  });\n\n  return object;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/omitUndefinedValues.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/omitUndefinedValues.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/omitUndefinedValues.ts",
      "name": "NamedParameters<typeof omitUndefinedValues>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/omitUndefinedValues.ts",
      "operationRelativePath": "src/omitUndefinedValues.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20omitUndefinedValues%3E",
        "definitions": {
          "NamedParameters<typeof omitUndefinedValues>": {
            "type": "object",
            "properties": {
              "object": {}
            },
            "required": [
              "object"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "shuffleNumbers",
    "start": 0,
    "end": 113,
    "length": 113,
    "raw": "export const shuffleNumbers = (numbers: number[]) =>\n  numbers.sort(() => {\n    return Math.random() - 0.5;\n  });",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/pickArrayItemsRandomly.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/pickArrayItemsRandomly.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/pickArrayItemsRandomly.ts",
      "name": "NamedParameters<typeof shuffleNumbers>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/pickArrayItemsRandomly.ts",
      "operationRelativePath": "src/pickArrayItemsRandomly.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20shuffleNumbers%3E",
        "definitions": {
          "NamedParameters<typeof shuffleNumbers>": {
            "type": "object",
            "properties": {
              "numbers": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "numbers"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "numbers",
        "schema": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "number"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "pickArrayItemsRandomly",
    "start": 115,
    "end": 489,
    "length": 374,
    "raw": "export const pickArrayItemsRandomly = <T extends any>(\n  list: T[],\n  amount: number\n): T[] => {\n  if (list.length <= amount) {\n    return list;\n  }\n  const indexes = list.map((_, index) => index);\n  const shuffled = shuffleNumbers(indexes);\n  const indexesToPick = shuffled.slice(0, amount);\n  const newList = indexesToPick.map((index) => list[index]);\n  return newList;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/pickArrayItemsRandomly.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/pickArrayItemsRandomly.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/pickArrayItemsRandomly.ts",
      "name": "NamedParameters<typeof pickArrayItemsRandomly>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/pickArrayItemsRandomly.ts",
      "operationRelativePath": "src/pickArrayItemsRandomly.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20pickArrayItemsRandomly%3E",
        "definitions": {
          "NamedParameters<typeof pickArrayItemsRandomly>": {
            "type": "object",
            "properties": {
              "list": {
                "type": "array",
                "items": {}
              },
              "amount": {
                "type": "number"
              }
            },
            "required": [
              "list",
              "amount"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "list",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "amount",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "pickRandomArrayItem",
    "start": 0,
    "end": 122,
    "length": 122,
    "raw": "export const pickRandomArrayItem = <T>(array: T[]) => {\n  return array[Math.floor((array.length - 1) * Math.random())];\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/pickRandomArrayItem.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/pickRandomArrayItem.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/pickRandomArrayItem.ts",
      "name": "NamedParameters<typeof pickRandomArrayItem>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/pickRandomArrayItem.ts",
      "operationRelativePath": "src/pickRandomArrayItem.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20pickRandomArrayItem%3E",
        "definitions": {
          "NamedParameters<typeof pickRandomArrayItem>": {
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "array"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "array",
        "schema": {
          "type": "array",
          "items": {}
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "pipelinifyOne",
    "start": 172,
    "end": 1378,
    "length": 1206,
    "raw": "const pipelinifyOne = async <T,>(\n  input: any,\n  functions: ((...parameters: any[]) => any)[],\n  context?: { [key: string]: any },\n  config?: { showErrors?: boolean },\n) => {\n  let errors: { functionName: string; inputValue: any }[] = [];\n\n  const finalOutput = await functions.reduce(\n    async (inputPromise, fn) => {\n      const rawInputs = makeArray(await inputPromise);\n      const inputs = rawInputs.filter(notEmpty);\n      if (inputs.length === 0) {\n        // should never happen\n        return;\n      }\n\n      const rawOutput = await Promise.all(\n        inputs.map((input) => fn(input, context)),\n      );\n\n      if (config?.showErrors) {\n        const errorInputValues = rawOutput\n          .map((output, index) => (!output ? inputs[index] : undefined))\n          .filter(notEmpty);\n\n        //console.log({ errorInputValues });\n        errors = errors.concat(\n          errorInputValues.map((inputValue) => ({\n            functionName: fn.name,\n            inputValue,\n          })),\n        );\n      }\n\n      const output = rawOutput.filter(notEmpty).flat();\n\n      return output;\n    },\n    promisifyValue(input) as Promise<any>,\n  );\n\n  return { output: finalOutput as T | T[], errors };\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/pipelinify.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/pipelinify.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/pipelinify.ts",
      "name": "NamedParameters<typeof pipelinifyOne>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/pipelinify.ts",
      "operationRelativePath": "src/pipelinify.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20pipelinifyOne%3E",
        "definitions": {
          "NamedParameters<typeof pipelinifyOne>": {
            "type": "object",
            "properties": {
              "input": {},
              "functions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  }
                }
              },
              "context": {
                "type": "object"
              },
              "config": {
                "type": "object",
                "properties": {
                  "showErrors": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "required": [
              "input",
              "functions"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "input",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "functions",
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "isFunction": {
                "type": "boolean",
                "const": true
              }
            }
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [
                  {
                    "name": "isFunction",
                    "required": false,
                    "schema": {
                      "type": "boolean"
                    }
                  }
                ],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "context",
        "schema": {
          "type": "object"
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": false
      },
      {
        "name": "config",
        "schema": {
          "type": "object",
          "properties": {
            "showErrors": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "showErrors",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "pipelinify",
    "start": 2390,
    "end": 2926,
    "length": 536,
    "raw": "export const pipelinify = async <T extends unknown>(\n  input: any,\n  functions: ((...parameters: any[]) => any)[],\n  context?: { [key: string]: any },\n  config?: {\n    showErrors?: boolean;\n  },\n) => {\n  if (!input) {\n    return;\n  }\n  const inputs = makeArray(input);\n\n  const result = await Promise.all(\n    inputs.map((input) => pipelinifyOne<T>(input, functions, context, config)),\n  );\n\n  const output = result.map((x) => x.output).flat() as T[];\n  const errors = result.map((x) => x.errors).flat();\n  return { output, errors };\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/pipelinify.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/pipelinify.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/pipelinify.ts",
      "name": "NamedParameters<typeof pipelinify>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/pipelinify.ts",
      "operationRelativePath": "src/pipelinify.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20pipelinify%3E",
        "definitions": {
          "NamedParameters<typeof pipelinify>": {
            "type": "object",
            "properties": {
              "input": {},
              "functions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  }
                }
              },
              "context": {
                "type": "object"
              },
              "config": {
                "type": "object",
                "properties": {
                  "showErrors": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "required": [
              "input",
              "functions"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "input",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "functions",
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "isFunction": {
                "type": "boolean",
                "const": true
              }
            }
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "properties": [
                  {
                    "name": "isFunction",
                    "required": false,
                    "schema": {
                      "type": "boolean"
                    }
                  }
                ],
                "type": "object"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      },
      {
        "name": "context",
        "schema": {
          "type": "object"
        },
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": false
      },
      {
        "name": "config",
        "schema": {
          "type": "object",
          "properties": {
            "showErrors": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "showErrors",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "promisifyValue",
    "start": 0,
    "end": 144,
    "length": 144,
    "raw": "export const promisifyValue = <T>(value: T): Promise<T> => {\n  const promise = new Promise<T>((resolve) => resolve(value));\n  return promise;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/promisifyValue.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/promisifyValue.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/promisifyValue.ts",
      "name": "NamedParameters<typeof promisifyValue>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/promisifyValue.ts",
      "operationRelativePath": "src/promisifyValue.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20promisifyValue%3E",
        "definitions": {
          "NamedParameters<typeof promisifyValue>": {
            "type": "object",
            "properties": {
              "value": {}
            },
            "required": [
              "value"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "value",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcVariable",
    "name": "isRunning",
    "start": 128,
    "end": 175,
    "length": 47,
    "raw": "let isRunning: { [name: string]: number } = {};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/queueThis.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/queueThis.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs"
  },
  {
    "modelName": "SwcFunction",
    "name": "queueThis",
    "start": 506,
    "end": 1297,
    "length": 791,
    "raw": "export const queueThis = async <TFn extends (...parameters: any[]) => any>(\n  fn: TFn,\n  maxConcurrency: number,\n  ...parameters: Parameters<TFn>\n) => {\n  const name = fn.name;\n\n  if (!isRunning[name]) {\n    isRunning[name] = 0;\n  }\n\n  if (isRunning[name] >= maxConcurrency) {\n    // wait until not running anymore\n    await new Promise<void>((resolve) => {\n      const interval = setInterval(() => {\n        if (isRunning[name] < maxConcurrency) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 1000);\n    });\n  }\n\n  // NB: count it while it's running\n\n  isRunning[name]++;\n\n  try {\n    const result = await fn(...parameters);\n    isRunning[name]--;\n    return result as WithoutPromise<ReturnType<TFn>>;\n  } catch (e) {\n    isRunning[name]--;\n    throw e;\n  }\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/queueThis.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/queueThis.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/queueThis.ts",
      "name": "NamedParameters<typeof queueThis>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/queueThis.ts",
      "operationRelativePath": "src/queueThis.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "removeOptionalKeysFromObjectStrings",
    "start": 135,
    "end": 435,
    "length": 300,
    "raw": "export const removeOptionalKeysFromObjectStrings = <TObject extends O>(\n  object: TObject,\n  keys: string[],\n): TObject => {\n  const newObject = keys.reduce((objectNow, key) => {\n    return {\n      ...objectNow,\n      [key]: undefined,\n    };\n  }, object);\n  return omitUndefinedValues(newObject);\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/removeOptionalKeysFromObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/removeOptionalKeysFromObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/removeOptionalKeysFromObject.ts",
      "name": "NamedParameters<typeof removeOptionalKeysFromObjectStrings>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/removeOptionalKeysFromObject.ts",
      "operationRelativePath": "src/removeOptionalKeysFromObject.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20removeOptionalKeysFromObjectStrings%3E",
        "definitions": {
          "NamedParameters<typeof removeOptionalKeysFromObjectStrings>": {
            "type": "object",
            "properties": {
              "object": {},
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "object",
              "keys"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "keys",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "string"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "removeOptionalKeysFromObject",
    "start": 437,
    "end": 632,
    "length": 195,
    "raw": "export const removeOptionalKeysFromObject = <TObject extends O>(\n  object: TObject,\n  keys: OptionalKeys<TObject>[],\n): TObject => {\n  return removeOptionalKeysFromObjectStrings(object, keys);\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/removeOptionalKeysFromObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/removeOptionalKeysFromObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/removeOptionalKeysFromObject.ts",
      "name": "NamedParameters<typeof removeOptionalKeysFromObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/removeOptionalKeysFromObject.ts",
      "operationRelativePath": "src/removeOptionalKeysFromObject.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'getId')"
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "reverseString",
    "start": 0,
    "end": 107,
    "length": 107,
    "raw": "export const reverseString = (string: string): string => {\n  return string.split(\"\").reverse().join(\"\");\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/replaceLastOccurence.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/replaceLastOccurence.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/replaceLastOccurence.ts",
      "name": "NamedParameters<typeof reverseString>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/replaceLastOccurence.ts",
      "operationRelativePath": "src/replaceLastOccurence.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20reverseString%3E",
        "definitions": {
          "NamedParameters<typeof reverseString>": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string"
              }
            },
            "required": [
              "string"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "string",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "replaceLastOccurence",
    "start": 538,
    "end": 996,
    "length": 458,
    "raw": "export const replaceLastOccurence = (\n  string: string,\n  searchValue: string,\n  replaceValue: string\n) => {\n  const [reversedString, reversedSearchValue, reversedReplaceValue] = [\n    string,\n    searchValue,\n    replaceValue,\n  ].map(reverseString);\n\n  const replacedReversedString = reversedString.replace(\n    reversedSearchValue,\n    reversedReplaceValue\n  );\n\n  const replacedString = reverseString(replacedReversedString);\n\n  return replacedString;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/replaceLastOccurence.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/replaceLastOccurence.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/replaceLastOccurence.ts",
      "name": "NamedParameters<typeof replaceLastOccurence>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/replaceLastOccurence.ts",
      "operationRelativePath": "src/replaceLastOccurence.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20replaceLastOccurence%3E",
        "definitions": {
          "NamedParameters<typeof replaceLastOccurence>": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string"
              },
              "searchValue": {
                "type": "string"
              },
              "replaceValue": {
                "type": "string"
              }
            },
            "required": [
              "string",
              "searchValue",
              "replaceValue"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "string",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      },
      {
        "name": "searchValue",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      },
      {
        "name": "replaceValue",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "verySlowFunction",
    "start": 70,
    "end": 259,
    "length": 189,
    "raw": "const verySlowFunction = async () => {\n  console.log(\"YOYOYO\");\n\n  await new Promise<void>((resolve) => setTimeout(() => resolve(), 2000));\n\n  console.log(\"still going\");\n\n  return true;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/runFunctionWithTimeout.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/runFunctionWithTimeout.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/runFunctionWithTimeout.test.ts",
      "name": "NamedParameters<typeof verySlowFunction>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/runFunctionWithTimeout.test.ts",
      "operationRelativePath": "src/runFunctionWithTimeout.test.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20verySlowFunction%3E",
        "definitions": {
          "NamedParameters<typeof verySlowFunction>": {
            "type": "object",
            "additionalProperties": false
          }
        }
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "afterResultFunction",
    "start": 261,
    "end": 351,
    "length": 90,
    "raw": "const afterResultFunction = (result: boolean) =>\n  console.log(`after result: ${result}`);",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/runFunctionWithTimeout.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/runFunctionWithTimeout.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/runFunctionWithTimeout.test.ts",
      "name": "NamedParameters<typeof afterResultFunction>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/runFunctionWithTimeout.test.ts",
      "operationRelativePath": "src/runFunctionWithTimeout.test.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20afterResultFunction%3E",
        "definitions": {
          "NamedParameters<typeof afterResultFunction>": {
            "type": "object",
            "properties": {
              "result": {
                "type": "boolean"
              }
            },
            "required": [
              "result"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "result",
        "schema": {
          "type": "boolean"
        },
        "simplifiedSchema": {
          "type": "boolean"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "test",
    "start": 353,
    "end": 543,
    "length": 190,
    "raw": "const test = async () => {\n  const result = await runFunctionWithTimeout<boolean>(\n    verySlowFunction,\n    1000,\n    afterResultFunction,\n  );\n\n  console.log(\"after 1s result\", result);\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/runFunctionWithTimeout.test.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/runFunctionWithTimeout.test.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/findNextId.test.ts",
      "name": "NamedParameters<typeof test>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/findNextId.test.ts",
      "operationRelativePath": "src/findNextId.test.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20test%3E",
        "definitions": {
          "NamedParameters<typeof test>": {
            "type": "object",
            "additionalProperties": false
          }
        }
      }
    }
  },
  {
    "modelName": "SwcFunction",
    "name": "runFunctionWithTimeout",
    "start": 0,
    "end": 1056,
    "length": 1056,
    "raw": "export const runFunctionWithTimeout = async <\n  TPromisedFnReturnType,\n  TFn extends () => any = () => any\n>(\n  fn: TFn,\n  timeoutMs: number,\n  onFinish?: (result: TPromisedFnReturnType, isTimedOut: boolean) => void\n): Promise<{ isTimedOut: boolean; result?: TPromisedFnReturnType }> => {\n  const result = await new Promise<{\n    isTimedOut: boolean;\n    result?: TPromisedFnReturnType;\n    // NB: resolve does NOT stop the promise! Everything will be executed.\n  }>(async (resolve, reject) => {\n    let isTimedOut = false;\n    const timeout = setTimeout(() => {\n      isTimedOut = true;\n\n      clearTimeout(timeout);\n      resolve({ isTimedOut: true });\n      // the function should return now, however, the execution should still continue\n    }, timeoutMs);\n\n    const fnResult = (await fn()) as TPromisedFnReturnType;\n\n    if (onFinish) {\n      // something to do only if the function is timed out...\n      onFinish(fnResult, isTimedOut);\n    }\n\n    clearTimeout(timeout);\n    resolve({ result: fnResult, isTimedOut: false });\n  });\n\n  return result;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/runFunctionWithTimeout.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/runFunctionWithTimeout.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/runFunctionWithTimeout.ts",
      "name": "NamedParameters<typeof runFunctionWithTimeout>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/runFunctionWithTimeout.ts",
      "operationRelativePath": "src/runFunctionWithTimeout.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20runFunctionWithTimeout%3E",
        "definitions": {
          "NamedParameters<typeof runFunctionWithTimeout>": {
            "type": "object",
            "properties": {
              "fn": {},
              "timeoutMs": {
                "type": "number"
              },
              "onFinish": {
                "type": "object",
                "properties": {
                  "isFunction": {
                    "type": "boolean",
                    "const": true
                  }
                }
              }
            },
            "required": [
              "fn",
              "timeoutMs"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "fn",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "timeoutMs",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      },
      {
        "name": "onFinish",
        "schema": {
          "type": "object",
          "properties": {
            "isFunction": {
              "type": "boolean",
              "const": true
            }
          }
        },
        "simplifiedSchema": {
          "properties": [
            {
              "name": "isFunction",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "type": "object"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "simplifyOpenapi",
    "start": 755,
    "end": 2937,
    "length": 2182,
    "raw": "export const simplifyOpenapi = (openapi: OpenapiDocument) => {\n  const pathsArray = objectMapToArray<OpenapiPathItemObject, \"path\">(\n    //@ts-ignore\n    openapi.paths || {},\n    \"path\",\n  );\n\n  // The method must be done in the map of the array of the first, then putting the path back on and do a flat. Harder\n  const pathArrayWithMethods = pathsArray\n    .map(({ path, description, summary, $ref, ...methodObject }) => {\n      const result = objectMapToArray(\n        methodObject as {\n          [method in HttpMethods]?: OpenapiOperationObject;\n        },\n        \"method\",\n      );\n\n      return result.map((x) => ({\n        path,\n        description,\n        summary,\n        $ref,\n        ...x,\n      }));\n    })\n    .flat();\n\n  // In this one I'm doing multiple simplifications at once, and it seems hard to generalise but it's doing the same as above\n  const simplified = pathArrayWithMethods.map(\n    ({ requestBody, responses, ...item }) => {\n      //NB: we're loosing potentially some information here! But if the convention is that we don't have these, its ok.\n\n      const forcedRequestBody = requestBody as\n        | OpenapiRequestBodyObject\n        | undefined;\n      const forcedResponses = responses?.[\"200\"] as\n        | OpenapiResponseObject\n        | undefined;\n\n      //However, the golden egg would be to do this without information loss and bi-directionally, automatically flattening a nested monster, so I can use it as an ActionSchema\n\n      // I think this must be possible if we just list the locations of the objectmaps that nestify things\n      const newItem = {\n        ...item,\n\n        // Response stuff\n        responsesStatusCode: 200,\n        responseDescription: forcedResponses?.description,\n        responseMediaType: \"application/json\",\n        responseContentSchema:\n          forcedResponses?.content?.[\"application/json\"]?.schema,\n\n        // Body stuff\n        requestBodyRequired: forcedRequestBody?.required,\n        requestBodyDescription: forcedRequestBody?.description,\n        requestBodySchema:\n          forcedRequestBody?.content?.[\"application/json\"]?.schema,\n      };\n\n      return newItem;\n    },\n  );\n\n  return simplified;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/simplifyOpenapi.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/simplifyOpenapi.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {
      "OpenapiDocument": {
        "$ref": "#/definitions/RemoveFunctions%3COpenAPIV3_1.Document%3E"
      },
      "RemoveFunctions<OpenAPIV3_1.Document>": {
        "$ref": "#/definitions/Pick%3COpenAPIV3_1.Document%2CNonFunctionKeyNames%3COpenAPIV3_1.Document%3E%3E"
      },
      "Pick<OpenAPIV3_1.Document,NonFunctionKeyNames<OpenAPIV3_1.Document>>": {
        "type": "object",
        "properties": {
          "openapi": {
            "type": "string"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.SecurityRequirementObject"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.TagObject"
            }
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
          },
          "x-express-openapi-additional-middleware": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "isFunction": {
                  "type": "boolean",
                  "const": true
                }
              }
            }
          },
          "x-express-openapi-validation-strict": {
            "type": "boolean"
          },
          "info": {
            "$ref": "#/definitions/OpenAPIV3_1.InfoObject"
          },
          "jsonSchemaDialect": {
            "type": "string"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3_1.ServerObject"
            }
          },
          "paths": {
            "$ref": "#/definitions/OpenAPIV3_1.PathsObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "webhooks": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.PathItemObject%7COpenAPIV3_1.ReferenceObject)%3E"
          },
          "components": {
            "$ref": "#/definitions/OpenAPIV3_1.ComponentsObject"
          }
        },
        "required": [
          "openapi",
          "info"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.SecurityRequirementObject": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "OpenAPIV3.TagObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.ExternalDocumentationObject": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3_1.InfoObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.InfoObject%2Cstructure-dist_index.d.ts-1662-1729-dist_index.d.ts-1633-1730-dist_index.d.ts-1604-1731-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.InfoObject,structure-dist_index.d.ts-1662-1729-dist_index.d.ts-1633-1730-dist_index.d.ts-1604-1731-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "summary": {
            "type": "string"
          },
          "license": {
            "$ref": "#/definitions/OpenAPIV3_1.LicenseObject"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/definitions/OpenAPIV3.ContactObject"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "version"
        ]
      },
      "OpenAPIV3_1.LicenseObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.LicenseObject%2Cstructure-dist_index.d.ts-1852-1889-dist_index.d.ts-1820-1890-dist_index.d.ts-1788-1891-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.LicenseObject,structure-dist_index.d.ts-1852-1889-dist_index.d.ts-1820-1890-dist_index.d.ts-1788-1891-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "OpenAPIV3.ContactObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OpenAPIV3_1.ServerObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.ServerObject%2Cstructure-dist_index.d.ts-1953-2070-dist_index.d.ts-1922-2071-dist_index.d.ts-1891-2072-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.ServerObject,structure-dist_index.d.ts-1953-2070-dist_index.d.ts-1922-2071-dist_index.d.ts-1891-2072-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "variables": {
            "$ref": "#/definitions/Record%3Cstring%2COpenAPIV3_1.ServerVariableObject%3E"
          }
        },
        "required": [
          "url"
        ]
      },
      "Record<string,OpenAPIV3_1.ServerVariableObject>": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/OpenAPIV3_1.ServerVariableObject"
        }
      },
      "OpenAPIV3_1.ServerVariableObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.ServerVariableObject%2Cstructure-dist_index.d.ts-2150-2196-dist_index.d.ts-2111-2197-dist_index.d.ts-2072-2198-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.ServerVariableObject,structure-dist_index.d.ts-2150-2196-dist_index.d.ts-2111-2197-dist_index.d.ts-2072-2198-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "default": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "default"
        ]
      },
      "OpenAPIV3_1.PathsObject<structure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "$ref": "#/definitions/Record%3Cstring%2C((def-alias-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E%26structure-dist_index.d.ts-2260-2263-dist_index.d.ts-2245-2263-dist_index.d.ts-2198-2319-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E)%7Cundefined)%3E"
      },
      "Record<string,((def-alias-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124<structure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>&structure-dist_index.d.ts-2260-2263-dist_index.d.ts-2245-2263-dist_index.d.ts-2198-2319-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124<structure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>)|undefined)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "get": {
                  "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                },
                "put": {
                  "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                },
                "post": {
                  "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                },
                "delete": {
                  "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                },
                "options": {
                  "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                },
                "head": {
                  "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                },
                "patch": {
                  "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                },
                "trace": {
                  "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                },
                "servers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OpenAPIV3_1.ServerObject"
                  }
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                      },
                      {
                        "$ref": "#/definitions/OpenAPIV3_1.ParameterObject"
                      }
                    ]
                  }
                },
                "$ref": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            },
            {
              "not": {}
            }
          ]
        }
      },
      "OpenAPIV3.OperationObject<structure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
          },
          "operationId": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.ParameterObject"
                }
              ]
            }
          },
          "requestBody": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.RequestBodyObject"
              }
            ]
          },
          "responses": {
            "$ref": "#/definitions/OpenAPIV3.ResponsesObject"
          },
          "callbacks": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.CallbackObject"
                }
              ]
            }
          },
          "deprecated": {
            "type": "boolean"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.SecurityRequirementObject"
            }
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.ServerObject"
            }
          }
        },
        "required": [
          "responses"
        ]
      },
      "OpenAPIV3.ReferenceObject": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string"
          }
        },
        "required": [
          "$ref"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.ParameterObject": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "deprecated": {
            "type": "boolean"
          },
          "allowEmptyValue": {
            "type": "boolean"
          },
          "style": {
            "type": "string"
          },
          "explode": {
            "type": "boolean"
          },
          "allowReserved": {
            "type": "boolean"
          },
          "schema": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.SchemaObject"
              }
            ]
          },
          "example": {},
          "examples": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.ExampleObject"
                }
              ]
            }
          },
          "content": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3.MediaTypeObject"
            }
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "in"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.SchemaObject": {
        "anyOf": [
          {
            "$ref": "#/definitions/OpenAPIV3.ArraySchemaObject"
          },
          {
            "$ref": "#/definitions/OpenAPIV3.NonArraySchemaObject"
          }
        ]
      },
      "OpenAPIV3.ArraySchemaObject": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "default": {},
          "multipleOf": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMaximum": {
            "type": "boolean"
          },
          "minimum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "pattern": {
            "type": "string"
          },
          "additionalProperties": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.SchemaObject"
              }
            ]
          },
          "maxItems": {
            "type": "number"
          },
          "minItems": {
            "type": "number"
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enum": {
            "type": "array",
            "items": {}
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                }
              ]
            }
          },
          "allOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                }
              ]
            }
          },
          "oneOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                }
              ]
            }
          },
          "anyOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                }
              ]
            }
          },
          "not": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.SchemaObject"
              }
            ]
          },
          "nullable": {
            "type": "boolean"
          },
          "discriminator": {
            "$ref": "#/definitions/OpenAPIV3.DiscriminatorObject"
          },
          "readOnly": {
            "type": "boolean"
          },
          "writeOnly": {
            "type": "boolean"
          },
          "xml": {
            "$ref": "#/definitions/OpenAPIV3.XMLObject"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
          },
          "example": {},
          "deprecated": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/definitions/OpenAPIV3.ArraySchemaObjectType"
          },
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.SchemaObject"
              }
            ]
          }
        },
        "required": [
          "type",
          "items"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.DiscriminatorObject": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string"
          },
          "mapping": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "propertyName"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.XMLObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "attribute": {
            "type": "boolean"
          },
          "wrapped": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OpenAPIV3.ArraySchemaObjectType": {
        "type": "string",
        "const": "array"
      },
      "OpenAPIV3.NonArraySchemaObject": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "default": {},
          "multipleOf": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMaximum": {
            "type": "boolean"
          },
          "minimum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "pattern": {
            "type": "string"
          },
          "additionalProperties": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.SchemaObject"
              }
            ]
          },
          "maxItems": {
            "type": "number"
          },
          "minItems": {
            "type": "number"
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enum": {
            "type": "array",
            "items": {}
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                }
              ]
            }
          },
          "allOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                }
              ]
            }
          },
          "oneOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                }
              ]
            }
          },
          "anyOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                }
              ]
            }
          },
          "not": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.SchemaObject"
              }
            ]
          },
          "nullable": {
            "type": "boolean"
          },
          "discriminator": {
            "$ref": "#/definitions/OpenAPIV3.DiscriminatorObject"
          },
          "readOnly": {
            "type": "boolean"
          },
          "writeOnly": {
            "type": "boolean"
          },
          "xml": {
            "$ref": "#/definitions/OpenAPIV3.XMLObject"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
          },
          "example": {},
          "deprecated": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/definitions/OpenAPIV3.NonArraySchemaObjectType"
          }
        },
        "additionalProperties": false
      },
      "OpenAPIV3.NonArraySchemaObjectType": {
        "type": "string",
        "enum": [
          "boolean",
          "object",
          "number",
          "string",
          "integer"
        ]
      },
      "OpenAPIV3.ExampleObject": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {},
          "externalValue": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OpenAPIV3.MediaTypeObject": {
        "type": "object",
        "properties": {
          "schema": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.SchemaObject"
              }
            ]
          },
          "example": {},
          "examples": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.ExampleObject"
                }
              ]
            }
          },
          "encoding": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3.EncodingObject"
            }
          }
        },
        "additionalProperties": false
      },
      "OpenAPIV3.EncodingObject": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.HeaderObject"
                }
              ]
            }
          },
          "style": {
            "type": "string"
          },
          "explode": {
            "type": "boolean"
          },
          "allowReserved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OpenAPIV3.HeaderObject": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "deprecated": {
            "type": "boolean"
          },
          "allowEmptyValue": {
            "type": "boolean"
          },
          "style": {
            "type": "string"
          },
          "explode": {
            "type": "boolean"
          },
          "allowReserved": {
            "type": "boolean"
          },
          "schema": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.SchemaObject"
              }
            ]
          },
          "example": {},
          "examples": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.ExampleObject"
                }
              ]
            }
          },
          "content": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3.MediaTypeObject"
            }
          }
        }
      },
      "OpenAPIV3.RequestBodyObject": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "content": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3.MediaTypeObject"
            }
          },
          "required": {
            "type": "boolean"
          }
        },
        "required": [
          "content"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.ResponsesObject": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3.ResponseObject"
            }
          ]
        }
      },
      "OpenAPIV3.ResponseObject": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.HeaderObject"
                }
              ]
            }
          },
          "content": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3.MediaTypeObject"
            }
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.LinkObject"
                }
              ]
            }
          }
        },
        "required": [
          "description"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.LinkObject": {
        "type": "object",
        "properties": {
          "operationRef": {
            "type": "string"
          },
          "operationId": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          },
          "requestBody": {},
          "description": {
            "type": "string"
          },
          "server": {
            "$ref": "#/definitions/OpenAPIV3.ServerObject"
          }
        },
        "additionalProperties": false
      },
      "OpenAPIV3.ServerObject": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3.ServerVariableObject"
            }
          }
        },
        "required": [
          "url"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.ServerVariableObject": {
        "type": "object",
        "properties": {
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "default"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.CallbackObject": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/OpenAPIV3.PathItemObject"
        }
      },
      "OpenAPIV3.PathItemObject": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "get": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
          },
          "put": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
          },
          "post": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
          },
          "delete": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
          },
          "options": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
          },
          "head": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
          },
          "patch": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
          },
          "trace": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
          },
          "$ref": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.ServerObject"
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.ParameterObject"
                }
              ]
            }
          }
        }
      },
      "OpenAPIV3.OperationObject<structure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
          },
          "operationId": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.ParameterObject"
                }
              ]
            }
          },
          "requestBody": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.RequestBodyObject"
              }
            ]
          },
          "responses": {
            "$ref": "#/definitions/OpenAPIV3.ResponsesObject"
          },
          "callbacks": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.CallbackObject"
                }
              ]
            }
          },
          "deprecated": {
            "type": "boolean"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.SecurityRequirementObject"
            }
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.ServerObject"
            }
          }
        },
        "required": [
          "responses"
        ]
      },
      "OpenAPIV3_1.ReferenceObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.ReferenceObject%2Cstructure-dist_index.d.ts-5252-5316-dist_index.d.ts-5218-5317-dist_index.d.ts-5184-5318-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.ReferenceObject,structure-dist_index.d.ts-5252-5316-dist_index.d.ts-5218-5317-dist_index.d.ts-5184-5318-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "$ref": {
            "type": "string"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenAPIV3_1.ParameterObject": {
        "$ref": "#/definitions/OpenAPIV3.ParameterObject"
      },
      "Record<string,(OpenAPIV3_1.PathItemObject|OpenAPIV3_1.ReferenceObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.PathItemObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            }
          ]
        }
      },
      "OpenAPIV3_1.PathItemObject": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "get": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "put": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "post": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "delete": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "options": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "head": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "patch": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "trace": {
            "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3_1.ServerObject"
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ParameterObject"
                }
              ]
            }
          },
          "$ref": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "OpenAPIV3.OperationObject<structure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
          },
          "operationId": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.ParameterObject"
                }
              ]
            }
          },
          "requestBody": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.RequestBodyObject"
              }
            ]
          },
          "responses": {
            "$ref": "#/definitions/OpenAPIV3.ResponsesObject"
          },
          "callbacks": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.CallbackObject"
                }
              ]
            }
          },
          "deprecated": {
            "type": "boolean"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.SecurityRequirementObject"
            }
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpenAPIV3.ServerObject"
            }
          }
        },
        "required": [
          "responses"
        ]
      },
      "OpenAPIV3_1.ComponentsObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.ComponentsObject%2Cstructure-dist_index.d.ts-6537-7230-dist_index.d.ts-6502-7231-dist_index.d.ts-6467-7232-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.ComponentsObject,structure-dist_index.d.ts-6537-7230-dist_index.d.ts-6502-7231-dist_index.d.ts-6467-7232-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemas": {
            "$ref": "#/definitions/Record%3Cstring%2COpenAPIV3_1.SchemaObject%3E"
          },
          "responses": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.ResponseObject)%3E"
          },
          "parameters": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.ParameterObject)%3E"
          },
          "examples": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.ExampleObject)%3E"
          },
          "requestBodies": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.RequestBodyObject)%3E"
          },
          "headers": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.HeaderObject)%3E"
          },
          "securitySchemes": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.SecuritySchemeObject)%3E"
          },
          "links": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.LinkObject)%3E"
          },
          "callbacks": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.CallbackObject)%3E"
          },
          "pathItems": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.PathItemObject)%3E"
          }
        }
      },
      "Record<string,OpenAPIV3_1.SchemaObject>": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
        }
      },
      "OpenAPIV3_1.SchemaObject": {
        "anyOf": [
          {
            "$ref": "#/definitions/OpenAPIV3_1.ArraySchemaObject"
          },
          {
            "$ref": "#/definitions/OpenAPIV3_1.NonArraySchemaObject"
          },
          {
            "$ref": "#/definitions/MixedSchemaObject"
          }
        ],
        "description": "There is no way to tell typescript to require items when type is either 'array' or array containing 'array' type 'items' will be always visible as optional Casting schema object to ArraySchemaObject or NonArraySchemaObject will work fine"
      },
      "OpenAPIV3_1.ArraySchemaObject": {
        "type": "object",
        "properties": {
          "examples": {
            "type": "array",
            "items": {
              "anyOf": [
                {},
                {
                  "not": {}
                }
              ]
            }
          },
          "exclusiveMinimum": {
            "type": [
              "boolean",
              "number"
            ]
          },
          "exclusiveMaximum": {
            "type": [
              "boolean",
              "number"
            ]
          },
          "contentMediaType": {
            "type": "string"
          },
          "$schema": {
            "type": "string"
          },
          "additionalProperties": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              }
            ]
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "allOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "oneOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "anyOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "not": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              }
            ]
          },
          "discriminator": {
            "$ref": "#/definitions/OpenAPIV3_1.DiscriminatorObject"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3_1.ExternalDocumentationObject"
          },
          "xml": {
            "$ref": "#/definitions/OpenAPIV3_1.XMLObject"
          },
          "const": {},
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "default": {},
          "multipleOf": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "minimum": {
            "type": "number"
          },
          "maxLength": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "pattern": {
            "type": "string"
          },
          "maxItems": {
            "type": "number"
          },
          "minItems": {
            "type": "number"
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enum": {
            "type": "array",
            "items": {}
          },
          "readOnly": {
            "type": "boolean"
          },
          "writeOnly": {
            "type": "boolean"
          },
          "example": {},
          "deprecated": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/definitions/OpenAPIV3_1.ArraySchemaObjectType"
          },
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              }
            ]
          }
        },
        "required": [
          "type",
          "items"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3_1.DiscriminatorObject": {
        "$ref": "#/definitions/OpenAPIV3.DiscriminatorObject"
      },
      "OpenAPIV3_1.ExternalDocumentationObject": {
        "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
      },
      "OpenAPIV3_1.XMLObject": {
        "$ref": "#/definitions/OpenAPIV3.XMLObject"
      },
      "OpenAPIV3_1.ArraySchemaObjectType": {
        "$ref": "#/definitions/OpenAPIV3.ArraySchemaObjectType"
      },
      "OpenAPIV3_1.NonArraySchemaObject": {
        "type": "object",
        "properties": {
          "examples": {
            "type": "array",
            "items": {
              "anyOf": [
                {},
                {
                  "not": {}
                }
              ]
            }
          },
          "exclusiveMinimum": {
            "type": [
              "boolean",
              "number"
            ]
          },
          "exclusiveMaximum": {
            "type": [
              "boolean",
              "number"
            ]
          },
          "contentMediaType": {
            "type": "string"
          },
          "$schema": {
            "type": "string"
          },
          "additionalProperties": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              }
            ]
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "allOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "oneOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "anyOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "not": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              }
            ]
          },
          "discriminator": {
            "$ref": "#/definitions/OpenAPIV3_1.DiscriminatorObject"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3_1.ExternalDocumentationObject"
          },
          "xml": {
            "$ref": "#/definitions/OpenAPIV3_1.XMLObject"
          },
          "const": {},
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "default": {},
          "multipleOf": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "minimum": {
            "type": "number"
          },
          "maxLength": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "pattern": {
            "type": "string"
          },
          "maxItems": {
            "type": "number"
          },
          "minItems": {
            "type": "number"
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enum": {
            "type": "array",
            "items": {}
          },
          "readOnly": {
            "type": "boolean"
          },
          "writeOnly": {
            "type": "boolean"
          },
          "example": {},
          "deprecated": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/definitions/OpenAPIV3_1.NonArraySchemaObjectType"
          }
        },
        "additionalProperties": false
      },
      "OpenAPIV3_1.NonArraySchemaObjectType": {
        "anyOf": [
          {
            "$ref": "#/definitions/OpenAPIV3.NonArraySchemaObjectType"
          },
          {
            "type": "string",
            "const": "null"
          }
        ]
      },
      "MixedSchemaObject": {
        "type": "object",
        "properties": {
          "examples": {
            "type": "array",
            "items": {
              "anyOf": [
                {},
                {
                  "not": {}
                }
              ]
            }
          },
          "exclusiveMinimum": {
            "type": [
              "boolean",
              "number"
            ]
          },
          "exclusiveMaximum": {
            "type": [
              "boolean",
              "number"
            ]
          },
          "contentMediaType": {
            "type": "string"
          },
          "$schema": {
            "type": "string"
          },
          "additionalProperties": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              }
            ]
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "allOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "oneOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "anyOf": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                }
              ]
            }
          },
          "not": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              }
            ]
          },
          "discriminator": {
            "$ref": "#/definitions/OpenAPIV3_1.DiscriminatorObject"
          },
          "externalDocs": {
            "$ref": "#/definitions/OpenAPIV3_1.ExternalDocumentationObject"
          },
          "xml": {
            "$ref": "#/definitions/OpenAPIV3_1.XMLObject"
          },
          "const": {},
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "default": {},
          "multipleOf": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "minimum": {
            "type": "number"
          },
          "maxLength": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "pattern": {
            "type": "string"
          },
          "maxItems": {
            "type": "number"
          },
          "minItems": {
            "type": "number"
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enum": {
            "type": "array",
            "items": {}
          },
          "readOnly": {
            "type": "boolean"
          },
          "writeOnly": {
            "type": "boolean"
          },
          "example": {},
          "deprecated": {
            "type": "boolean"
          },
          "type": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ArraySchemaObjectType"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.NonArraySchemaObjectType"
                }
              ]
            }
          },
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.ResponseObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.ResponseObject"
            }
          ]
        }
      },
      "OpenAPIV3_1.ResponseObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.ResponseObject%2Cstructure-dist_index.d.ts-5937-6202-dist_index.d.ts-5904-6203-dist_index.d.ts-5871-6204-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.ResponseObject,structure-dist_index.d.ts-5937-6202-dist_index.d.ts-5904-6203-dist_index.d.ts-5871-6204-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.HeaderObject"
                }
              ]
            }
          },
          "content": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3_1.MediaTypeObject"
            }
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.LinkObject"
                }
              ]
            }
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "description"
        ]
      },
      "OpenAPIV3_1.HeaderObject": {
        "$ref": "#/definitions/OpenAPIV3.HeaderObject"
      },
      "OpenAPIV3_1.MediaTypeObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.MediaTypeObject%2Cstructure-dist_index.d.ts-5443-5568-dist_index.d.ts-5409-5569-dist_index.d.ts-5375-5570-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.MediaTypeObject,structure-dist_index.d.ts-5443-5568-dist_index.d.ts-5409-5569-dist_index.d.ts-5375-5570-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schema": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
              }
            ]
          },
          "examples": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.ExampleObject)%3E"
          },
          "example": {},
          "encoding": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3.EncodingObject"
            }
          }
        }
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.ExampleObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.ExampleObject"
            }
          ]
        }
      },
      "OpenAPIV3_1.ExampleObject": {
        "$ref": "#/definitions/OpenAPIV3.ExampleObject"
      },
      "OpenAPIV3_1.LinkObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.LinkObject%2Cstructure-dist_index.d.ts-6262-6301-dist_index.d.ts-6233-6302-dist_index.d.ts-6204-6303-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.LinkObject,structure-dist_index.d.ts-6262-6301-dist_index.d.ts-6233-6302-dist_index.d.ts-6204-6303-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "server": {
            "$ref": "#/definitions/OpenAPIV3_1.ServerObject"
          },
          "operationRef": {
            "type": "string"
          },
          "operationId": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          },
          "requestBody": {},
          "description": {
            "type": "string"
          }
        }
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.ParameterObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.ParameterObject"
            }
          ]
        }
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.RequestBodyObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.RequestBodyObject"
            }
          ]
        }
      },
      "OpenAPIV3_1.RequestBodyObject": {
        "$ref": "#/definitions/Modify%3COpenAPIV3.RequestBodyObject%2Cstructure-dist_index.d.ts-5701-5785-dist_index.d.ts-5665-5786-dist_index.d.ts-5629-5787-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
      },
      "Modify<OpenAPIV3.RequestBodyObject,structure-dist_index.d.ts-5701-5785-dist_index.d.ts-5665-5786-dist_index.d.ts-5629-5787-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "content": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3_1.MediaTypeObject"
            }
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          }
        },
        "required": [
          "content"
        ]
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.HeaderObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.HeaderObject"
            }
          ]
        }
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.SecuritySchemeObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.SecuritySchemeObject"
            }
          ]
        }
      },
      "OpenAPIV3_1.SecuritySchemeObject": {
        "$ref": "#/definitions/OpenAPIV3.SecuritySchemeObject"
      },
      "OpenAPIV3.SecuritySchemeObject": {
        "anyOf": [
          {
            "$ref": "#/definitions/OpenAPIV3.HttpSecurityScheme"
          },
          {
            "$ref": "#/definitions/OpenAPIV3.ApiKeySecurityScheme"
          },
          {
            "$ref": "#/definitions/OpenAPIV3.OAuth2SecurityScheme"
          },
          {
            "$ref": "#/definitions/OpenAPIV3.OpenIdSecurityScheme"
          }
        ]
      },
      "OpenAPIV3.HttpSecurityScheme": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "http"
          },
          "description": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "bearerFormat": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "scheme"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.ApiKeySecurityScheme": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "apiKey"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "in"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.OAuth2SecurityScheme": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "oauth2"
          },
          "description": {
            "type": "string"
          },
          "flows": {
            "type": "object",
            "properties": {
              "implicit": {
                "type": "object",
                "properties": {
                  "authorizationUrl": {
                    "type": "string"
                  },
                  "refreshUrl": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "authorizationUrl",
                  "scopes"
                ],
                "additionalProperties": false
              },
              "password": {
                "type": "object",
                "properties": {
                  "tokenUrl": {
                    "type": "string"
                  },
                  "refreshUrl": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tokenUrl",
                  "scopes"
                ],
                "additionalProperties": false
              },
              "clientCredentials": {
                "type": "object",
                "properties": {
                  "tokenUrl": {
                    "type": "string"
                  },
                  "refreshUrl": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tokenUrl",
                  "scopes"
                ],
                "additionalProperties": false
              },
              "authorizationCode": {
                "type": "object",
                "properties": {
                  "authorizationUrl": {
                    "type": "string"
                  },
                  "tokenUrl": {
                    "type": "string"
                  },
                  "refreshUrl": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "authorizationUrl",
                  "tokenUrl",
                  "scopes"
                ],
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "required": [
          "type",
          "flows"
        ],
        "additionalProperties": false
      },
      "OpenAPIV3.OpenIdSecurityScheme": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "openIdConnect"
          },
          "description": {
            "type": "string"
          },
          "openIdConnectUrl": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "openIdConnectUrl"
        ],
        "additionalProperties": false
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.LinkObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.LinkObject"
            }
          ]
        }
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.CallbackObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.CallbackObject"
            }
          ]
        }
      },
      "OpenAPIV3_1.CallbackObject": {
        "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.PathItemObject%7COpenAPIV3_1.ReferenceObject)%3E"
      },
      "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.PathItemObject)>": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
            },
            {
              "$ref": "#/definitions/OpenAPIV3_1.PathItemObject"
            }
          ]
        }
      }
    },
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/simplifyOpenapi.ts",
      "name": "NamedParameters<typeof simplifyOpenapi>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/simplifyOpenapi.ts",
      "operationRelativePath": "src/simplifyOpenapi.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20simplifyOpenapi%3E",
        "definitions": {
          "NamedParameters<typeof simplifyOpenapi>": {
            "type": "object",
            "properties": {
              "openapi": {
                "$ref": "#/definitions/OpenapiDocument"
              }
            },
            "required": [
              "openapi"
            ],
            "additionalProperties": false
          },
          "OpenapiDocument": {
            "$ref": "#/definitions/RemoveFunctions%3COpenAPIV3_1.Document%3E"
          },
          "RemoveFunctions<OpenAPIV3_1.Document>": {
            "$ref": "#/definitions/Pick%3COpenAPIV3_1.Document%2CNonFunctionKeyNames%3COpenAPIV3_1.Document%3E%3E"
          },
          "Pick<OpenAPIV3_1.Document,NonFunctionKeyNames<OpenAPIV3_1.Document>>": {
            "type": "object",
            "properties": {
              "openapi": {
                "type": "string"
              },
              "security": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.SecurityRequirementObject"
                }
              },
              "tags": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.TagObject"
                }
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
              },
              "x-express-openapi-additional-middleware": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  }
                }
              },
              "x-express-openapi-validation-strict": {
                "type": "boolean"
              },
              "info": {
                "$ref": "#/definitions/OpenAPIV3_1.InfoObject"
              },
              "jsonSchemaDialect": {
                "type": "string"
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3_1.ServerObject"
                }
              },
              "paths": {
                "$ref": "#/definitions/OpenAPIV3_1.PathsObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "webhooks": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.PathItemObject%7COpenAPIV3_1.ReferenceObject)%3E"
              },
              "components": {
                "$ref": "#/definitions/OpenAPIV3_1.ComponentsObject"
              }
            },
            "required": [
              "openapi",
              "info"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.SecurityRequirementObject": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "OpenAPIV3.TagObject": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.ExternalDocumentationObject": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3_1.InfoObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.InfoObject%2Cstructure-dist_index.d.ts-1662-1729-dist_index.d.ts-1633-1730-dist_index.d.ts-1604-1731-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.InfoObject,structure-dist_index.d.ts-1662-1729-dist_index.d.ts-1633-1730-dist_index.d.ts-1604-1731-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "summary": {
                "type": "string"
              },
              "license": {
                "$ref": "#/definitions/OpenAPIV3_1.LicenseObject"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "termsOfService": {
                "type": "string"
              },
              "contact": {
                "$ref": "#/definitions/OpenAPIV3.ContactObject"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "version"
            ]
          },
          "OpenAPIV3_1.LicenseObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.LicenseObject%2Cstructure-dist_index.d.ts-1852-1889-dist_index.d.ts-1820-1890-dist_index.d.ts-1788-1891-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.LicenseObject,structure-dist_index.d.ts-1852-1889-dist_index.d.ts-1820-1890-dist_index.d.ts-1788-1891-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "identifier": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          },
          "OpenAPIV3.ContactObject": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "OpenAPIV3_1.ServerObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.ServerObject%2Cstructure-dist_index.d.ts-1953-2070-dist_index.d.ts-1922-2071-dist_index.d.ts-1891-2072-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.ServerObject,structure-dist_index.d.ts-1953-2070-dist_index.d.ts-1922-2071-dist_index.d.ts-1891-2072-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "variables": {
                "$ref": "#/definitions/Record%3Cstring%2COpenAPIV3_1.ServerVariableObject%3E"
              }
            },
            "required": [
              "url"
            ]
          },
          "Record<string,OpenAPIV3_1.ServerVariableObject>": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3_1.ServerVariableObject"
            }
          },
          "OpenAPIV3_1.ServerVariableObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.ServerVariableObject%2Cstructure-dist_index.d.ts-2150-2196-dist_index.d.ts-2111-2197-dist_index.d.ts-2072-2198-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.ServerVariableObject,structure-dist_index.d.ts-2150-2196-dist_index.d.ts-2111-2197-dist_index.d.ts-2072-2198-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enum": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              },
              "default": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "default"
            ]
          },
          "OpenAPIV3_1.PathsObject<structure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "$ref": "#/definitions/Record%3Cstring%2C((def-alias-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E%26structure-dist_index.d.ts-2260-2263-dist_index.d.ts-2245-2263-dist_index.d.ts-2198-2319-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E)%7Cundefined)%3E"
          },
          "Record<string,((def-alias-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124<structure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>&structure-dist_index.d.ts-2260-2263-dist_index.d.ts-2245-2263-dist_index.d.ts-2198-2319-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124<structure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>)|undefined)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "get": {
                      "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                    },
                    "put": {
                      "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                    },
                    "post": {
                      "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                    },
                    "delete": {
                      "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                    },
                    "options": {
                      "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                    },
                    "head": {
                      "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                    },
                    "patch": {
                      "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                    },
                    "trace": {
                      "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
                    },
                    "servers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/OpenAPIV3_1.ServerObject"
                      }
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                          },
                          {
                            "$ref": "#/definitions/OpenAPIV3_1.ParameterObject"
                          }
                        ]
                      }
                    },
                    "$ref": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                {
                  "not": {}
                }
              ]
            }
          },
          "OpenAPIV3.OperationObject<structure-dist_index.d.ts-1117-1120-dist_index.d.ts-1103-1120-dist_index.d.ts-1077-1604-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "summary": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
              },
              "operationId": {
                "type": "string"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.ParameterObject"
                    }
                  ]
                }
              },
              "requestBody": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.RequestBodyObject"
                  }
                ]
              },
              "responses": {
                "$ref": "#/definitions/OpenAPIV3.ResponsesObject"
              },
              "callbacks": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.CallbackObject"
                    }
                  ]
                }
              },
              "deprecated": {
                "type": "boolean"
              },
              "security": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.SecurityRequirementObject"
                }
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.ServerObject"
                }
              }
            },
            "required": [
              "responses"
            ]
          },
          "OpenAPIV3.ReferenceObject": {
            "type": "object",
            "properties": {
              "$ref": {
                "type": "string"
              }
            },
            "required": [
              "$ref"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.ParameterObject": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "required": {
                "type": "boolean"
              },
              "deprecated": {
                "type": "boolean"
              },
              "allowEmptyValue": {
                "type": "boolean"
              },
              "style": {
                "type": "string"
              },
              "explode": {
                "type": "boolean"
              },
              "allowReserved": {
                "type": "boolean"
              },
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                  }
                ]
              },
              "example": {},
              "examples": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.ExampleObject"
                    }
                  ]
                }
              },
              "content": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3.MediaTypeObject"
                }
              },
              "name": {
                "type": "string"
              },
              "in": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "in"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.SchemaObject": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.ArraySchemaObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.NonArraySchemaObject"
              }
            ]
          },
          "OpenAPIV3.ArraySchemaObject": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "default": {},
              "multipleOf": {
                "type": "number"
              },
              "maximum": {
                "type": "number"
              },
              "exclusiveMaximum": {
                "type": "boolean"
              },
              "minimum": {
                "type": "number"
              },
              "exclusiveMinimum": {
                "type": "boolean"
              },
              "maxLength": {
                "type": "number"
              },
              "minLength": {
                "type": "number"
              },
              "pattern": {
                "type": "string"
              },
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                  }
                ]
              },
              "maxItems": {
                "type": "number"
              },
              "minItems": {
                "type": "number"
              },
              "uniqueItems": {
                "type": "boolean"
              },
              "maxProperties": {
                "type": "number"
              },
              "minProperties": {
                "type": "number"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "enum": {
                "type": "array",
                "items": {}
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                    }
                  ]
                }
              },
              "allOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                    }
                  ]
                }
              },
              "oneOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                    }
                  ]
                }
              },
              "anyOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                    }
                  ]
                }
              },
              "not": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                  }
                ]
              },
              "nullable": {
                "type": "boolean"
              },
              "discriminator": {
                "$ref": "#/definitions/OpenAPIV3.DiscriminatorObject"
              },
              "readOnly": {
                "type": "boolean"
              },
              "writeOnly": {
                "type": "boolean"
              },
              "xml": {
                "$ref": "#/definitions/OpenAPIV3.XMLObject"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
              },
              "example": {},
              "deprecated": {
                "type": "boolean"
              },
              "type": {
                "$ref": "#/definitions/OpenAPIV3.ArraySchemaObjectType"
              },
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                  }
                ]
              }
            },
            "required": [
              "type",
              "items"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.DiscriminatorObject": {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "string"
              },
              "mapping": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "propertyName"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.XMLObject": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              },
              "prefix": {
                "type": "string"
              },
              "attribute": {
                "type": "boolean"
              },
              "wrapped": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          },
          "OpenAPIV3.ArraySchemaObjectType": {
            "type": "string",
            "const": "array"
          },
          "OpenAPIV3.NonArraySchemaObject": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "default": {},
              "multipleOf": {
                "type": "number"
              },
              "maximum": {
                "type": "number"
              },
              "exclusiveMaximum": {
                "type": "boolean"
              },
              "minimum": {
                "type": "number"
              },
              "exclusiveMinimum": {
                "type": "boolean"
              },
              "maxLength": {
                "type": "number"
              },
              "minLength": {
                "type": "number"
              },
              "pattern": {
                "type": "string"
              },
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                  }
                ]
              },
              "maxItems": {
                "type": "number"
              },
              "minItems": {
                "type": "number"
              },
              "uniqueItems": {
                "type": "boolean"
              },
              "maxProperties": {
                "type": "number"
              },
              "minProperties": {
                "type": "number"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "enum": {
                "type": "array",
                "items": {}
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                    }
                  ]
                }
              },
              "allOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                    }
                  ]
                }
              },
              "oneOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                    }
                  ]
                }
              },
              "anyOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                    }
                  ]
                }
              },
              "not": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                  }
                ]
              },
              "nullable": {
                "type": "boolean"
              },
              "discriminator": {
                "$ref": "#/definitions/OpenAPIV3.DiscriminatorObject"
              },
              "readOnly": {
                "type": "boolean"
              },
              "writeOnly": {
                "type": "boolean"
              },
              "xml": {
                "$ref": "#/definitions/OpenAPIV3.XMLObject"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
              },
              "example": {},
              "deprecated": {
                "type": "boolean"
              },
              "type": {
                "$ref": "#/definitions/OpenAPIV3.NonArraySchemaObjectType"
              }
            },
            "additionalProperties": false
          },
          "OpenAPIV3.NonArraySchemaObjectType": {
            "type": "string",
            "enum": [
              "boolean",
              "object",
              "number",
              "string",
              "integer"
            ]
          },
          "OpenAPIV3.ExampleObject": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "value": {},
              "externalValue": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "OpenAPIV3.MediaTypeObject": {
            "type": "object",
            "properties": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                  }
                ]
              },
              "example": {},
              "examples": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.ExampleObject"
                    }
                  ]
                }
              },
              "encoding": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3.EncodingObject"
                }
              }
            },
            "additionalProperties": false
          },
          "OpenAPIV3.EncodingObject": {
            "type": "object",
            "properties": {
              "contentType": {
                "type": "string"
              },
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.HeaderObject"
                    }
                  ]
                }
              },
              "style": {
                "type": "string"
              },
              "explode": {
                "type": "boolean"
              },
              "allowReserved": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          },
          "OpenAPIV3.HeaderObject": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "description": {
                "type": "string"
              },
              "required": {
                "type": "boolean"
              },
              "deprecated": {
                "type": "boolean"
              },
              "allowEmptyValue": {
                "type": "boolean"
              },
              "style": {
                "type": "string"
              },
              "explode": {
                "type": "boolean"
              },
              "allowReserved": {
                "type": "boolean"
              },
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.SchemaObject"
                  }
                ]
              },
              "example": {},
              "examples": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.ExampleObject"
                    }
                  ]
                }
              },
              "content": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3.MediaTypeObject"
                }
              }
            }
          },
          "OpenAPIV3.RequestBodyObject": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "content": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3.MediaTypeObject"
                }
              },
              "required": {
                "type": "boolean"
              }
            },
            "required": [
              "content"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.ResponsesObject": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3.ResponseObject"
                }
              ]
            }
          },
          "OpenAPIV3.ResponseObject": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.HeaderObject"
                    }
                  ]
                }
              },
              "content": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3.MediaTypeObject"
                }
              },
              "links": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.LinkObject"
                    }
                  ]
                }
              }
            },
            "required": [
              "description"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.LinkObject": {
            "type": "object",
            "properties": {
              "operationRef": {
                "type": "string"
              },
              "operationId": {
                "type": "string"
              },
              "parameters": {
                "type": "object"
              },
              "requestBody": {},
              "description": {
                "type": "string"
              },
              "server": {
                "$ref": "#/definitions/OpenAPIV3.ServerObject"
              }
            },
            "additionalProperties": false
          },
          "OpenAPIV3.ServerObject": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "variables": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3.ServerVariableObject"
                }
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.ServerVariableObject": {
            "type": "object",
            "properties": {
              "enum": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "default": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "default"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.CallbackObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3.PathItemObject"
            }
          },
          "OpenAPIV3.PathItemObject": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "get": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
              },
              "put": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
              },
              "post": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
              },
              "delete": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
              },
              "options": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
              },
              "head": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
              },
              "patch": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
              },
              "trace": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124%3E"
              },
              "$ref": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.ServerObject"
                }
              },
              "parameters": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.ParameterObject"
                    }
                  ]
                }
              }
            }
          },
          "OpenAPIV3.OperationObject<structure-dist_index.d.ts-9334-9337-dist_index.d.ts-9320-9337-dist_index.d.ts-9295-9586-dist_index.d.ts-7684-17209-dist_index.d.ts-7649-17209-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "summary": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
              },
              "operationId": {
                "type": "string"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.ParameterObject"
                    }
                  ]
                }
              },
              "requestBody": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.RequestBodyObject"
                  }
                ]
              },
              "responses": {
                "$ref": "#/definitions/OpenAPIV3.ResponsesObject"
              },
              "callbacks": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.CallbackObject"
                    }
                  ]
                }
              },
              "deprecated": {
                "type": "boolean"
              },
              "security": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.SecurityRequirementObject"
                }
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.ServerObject"
                }
              }
            },
            "required": [
              "responses"
            ]
          },
          "OpenAPIV3_1.ReferenceObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.ReferenceObject%2Cstructure-dist_index.d.ts-5252-5316-dist_index.d.ts-5218-5317-dist_index.d.ts-5184-5318-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.ReferenceObject,structure-dist_index.d.ts-5252-5316-dist_index.d.ts-5218-5317-dist_index.d.ts-5184-5318-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "summary": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "$ref": {
                "type": "string"
              }
            },
            "required": [
              "$ref"
            ]
          },
          "OpenAPIV3_1.ParameterObject": {
            "$ref": "#/definitions/OpenAPIV3.ParameterObject"
          },
          "Record<string,(OpenAPIV3_1.PathItemObject|OpenAPIV3_1.ReferenceObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.PathItemObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                }
              ]
            }
          },
          "OpenAPIV3_1.PathItemObject": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "get": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "put": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "post": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "delete": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "options": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "head": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "patch": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "trace": {
                "$ref": "#/definitions/OpenAPIV3.OperationObject%3Cstructure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3_1.ServerObject"
                }
              },
              "parameters": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ParameterObject"
                    }
                  ]
                }
              },
              "$ref": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "OpenAPIV3.OperationObject<structure-dist_index.d.ts-2418-2421-dist_index.d.ts-2404-2421-dist_index.d.ts-2372-2628-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "summary": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
              },
              "operationId": {
                "type": "string"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.ParameterObject"
                    }
                  ]
                }
              },
              "requestBody": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3.RequestBodyObject"
                  }
                ]
              },
              "responses": {
                "$ref": "#/definitions/OpenAPIV3.ResponsesObject"
              },
              "callbacks": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3.CallbackObject"
                    }
                  ]
                }
              },
              "deprecated": {
                "type": "boolean"
              },
              "security": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.SecurityRequirementObject"
                }
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OpenAPIV3.ServerObject"
                }
              }
            },
            "required": [
              "responses"
            ]
          },
          "OpenAPIV3_1.ComponentsObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.ComponentsObject%2Cstructure-dist_index.d.ts-6537-7230-dist_index.d.ts-6502-7231-dist_index.d.ts-6467-7232-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.ComponentsObject,structure-dist_index.d.ts-6537-7230-dist_index.d.ts-6502-7231-dist_index.d.ts-6467-7232-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemas": {
                "$ref": "#/definitions/Record%3Cstring%2COpenAPIV3_1.SchemaObject%3E"
              },
              "responses": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.ResponseObject)%3E"
              },
              "parameters": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.ParameterObject)%3E"
              },
              "examples": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.ExampleObject)%3E"
              },
              "requestBodies": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.RequestBodyObject)%3E"
              },
              "headers": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.HeaderObject)%3E"
              },
              "securitySchemes": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.SecuritySchemeObject)%3E"
              },
              "links": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.LinkObject)%3E"
              },
              "callbacks": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.CallbackObject)%3E"
              },
              "pathItems": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.PathItemObject)%3E"
              }
            }
          },
          "Record<string,OpenAPIV3_1.SchemaObject>": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
            }
          },
          "OpenAPIV3_1.SchemaObject": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3_1.ArraySchemaObject"
              },
              {
                "$ref": "#/definitions/OpenAPIV3_1.NonArraySchemaObject"
              },
              {
                "$ref": "#/definitions/MixedSchemaObject"
              }
            ],
            "description": "There is no way to tell typescript to require items when type is either 'array' or array containing 'array' type 'items' will be always visible as optional Casting schema object to ArraySchemaObject or NonArraySchemaObject will work fine"
          },
          "OpenAPIV3_1.ArraySchemaObject": {
            "type": "object",
            "properties": {
              "examples": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {},
                    {
                      "not": {}
                    }
                  ]
                }
              },
              "exclusiveMinimum": {
                "type": [
                  "boolean",
                  "number"
                ]
              },
              "exclusiveMaximum": {
                "type": [
                  "boolean",
                  "number"
                ]
              },
              "contentMediaType": {
                "type": "string"
              },
              "$schema": {
                "type": "string"
              },
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  }
                ]
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "allOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "oneOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "anyOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "not": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  }
                ]
              },
              "discriminator": {
                "$ref": "#/definitions/OpenAPIV3_1.DiscriminatorObject"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3_1.ExternalDocumentationObject"
              },
              "xml": {
                "$ref": "#/definitions/OpenAPIV3_1.XMLObject"
              },
              "const": {},
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "default": {},
              "multipleOf": {
                "type": "number"
              },
              "maximum": {
                "type": "number"
              },
              "minimum": {
                "type": "number"
              },
              "maxLength": {
                "type": "number"
              },
              "minLength": {
                "type": "number"
              },
              "pattern": {
                "type": "string"
              },
              "maxItems": {
                "type": "number"
              },
              "minItems": {
                "type": "number"
              },
              "uniqueItems": {
                "type": "boolean"
              },
              "maxProperties": {
                "type": "number"
              },
              "minProperties": {
                "type": "number"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "enum": {
                "type": "array",
                "items": {}
              },
              "readOnly": {
                "type": "boolean"
              },
              "writeOnly": {
                "type": "boolean"
              },
              "example": {},
              "deprecated": {
                "type": "boolean"
              },
              "type": {
                "$ref": "#/definitions/OpenAPIV3_1.ArraySchemaObjectType"
              },
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  }
                ]
              }
            },
            "required": [
              "type",
              "items"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3_1.DiscriminatorObject": {
            "$ref": "#/definitions/OpenAPIV3.DiscriminatorObject"
          },
          "OpenAPIV3_1.ExternalDocumentationObject": {
            "$ref": "#/definitions/OpenAPIV3.ExternalDocumentationObject"
          },
          "OpenAPIV3_1.XMLObject": {
            "$ref": "#/definitions/OpenAPIV3.XMLObject"
          },
          "OpenAPIV3_1.ArraySchemaObjectType": {
            "$ref": "#/definitions/OpenAPIV3.ArraySchemaObjectType"
          },
          "OpenAPIV3_1.NonArraySchemaObject": {
            "type": "object",
            "properties": {
              "examples": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {},
                    {
                      "not": {}
                    }
                  ]
                }
              },
              "exclusiveMinimum": {
                "type": [
                  "boolean",
                  "number"
                ]
              },
              "exclusiveMaximum": {
                "type": [
                  "boolean",
                  "number"
                ]
              },
              "contentMediaType": {
                "type": "string"
              },
              "$schema": {
                "type": "string"
              },
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  }
                ]
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "allOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "oneOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "anyOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "not": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  }
                ]
              },
              "discriminator": {
                "$ref": "#/definitions/OpenAPIV3_1.DiscriminatorObject"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3_1.ExternalDocumentationObject"
              },
              "xml": {
                "$ref": "#/definitions/OpenAPIV3_1.XMLObject"
              },
              "const": {},
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "default": {},
              "multipleOf": {
                "type": "number"
              },
              "maximum": {
                "type": "number"
              },
              "minimum": {
                "type": "number"
              },
              "maxLength": {
                "type": "number"
              },
              "minLength": {
                "type": "number"
              },
              "pattern": {
                "type": "string"
              },
              "maxItems": {
                "type": "number"
              },
              "minItems": {
                "type": "number"
              },
              "uniqueItems": {
                "type": "boolean"
              },
              "maxProperties": {
                "type": "number"
              },
              "minProperties": {
                "type": "number"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "enum": {
                "type": "array",
                "items": {}
              },
              "readOnly": {
                "type": "boolean"
              },
              "writeOnly": {
                "type": "boolean"
              },
              "example": {},
              "deprecated": {
                "type": "boolean"
              },
              "type": {
                "$ref": "#/definitions/OpenAPIV3_1.NonArraySchemaObjectType"
              }
            },
            "additionalProperties": false
          },
          "OpenAPIV3_1.NonArraySchemaObjectType": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.NonArraySchemaObjectType"
              },
              {
                "type": "string",
                "const": "null"
              }
            ]
          },
          "MixedSchemaObject": {
            "type": "object",
            "properties": {
              "examples": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {},
                    {
                      "not": {}
                    }
                  ]
                }
              },
              "exclusiveMinimum": {
                "type": [
                  "boolean",
                  "number"
                ]
              },
              "exclusiveMaximum": {
                "type": [
                  "boolean",
                  "number"
                ]
              },
              "contentMediaType": {
                "type": "string"
              },
              "$schema": {
                "type": "string"
              },
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  }
                ]
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "allOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "oneOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "anyOf": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                    }
                  ]
                }
              },
              "not": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  }
                ]
              },
              "discriminator": {
                "$ref": "#/definitions/OpenAPIV3_1.DiscriminatorObject"
              },
              "externalDocs": {
                "$ref": "#/definitions/OpenAPIV3_1.ExternalDocumentationObject"
              },
              "xml": {
                "$ref": "#/definitions/OpenAPIV3_1.XMLObject"
              },
              "const": {},
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "default": {},
              "multipleOf": {
                "type": "number"
              },
              "maximum": {
                "type": "number"
              },
              "minimum": {
                "type": "number"
              },
              "maxLength": {
                "type": "number"
              },
              "minLength": {
                "type": "number"
              },
              "pattern": {
                "type": "string"
              },
              "maxItems": {
                "type": "number"
              },
              "minItems": {
                "type": "number"
              },
              "uniqueItems": {
                "type": "boolean"
              },
              "maxProperties": {
                "type": "number"
              },
              "minProperties": {
                "type": "number"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "enum": {
                "type": "array",
                "items": {}
              },
              "readOnly": {
                "type": "boolean"
              },
              "writeOnly": {
                "type": "boolean"
              },
              "example": {},
              "deprecated": {
                "type": "boolean"
              },
              "type": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ArraySchemaObjectType"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.NonArraySchemaObjectType"
                    }
                  ]
                }
              },
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.ResponseObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ResponseObject"
                }
              ]
            }
          },
          "OpenAPIV3_1.ResponseObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.ResponseObject%2Cstructure-dist_index.d.ts-5937-6202-dist_index.d.ts-5904-6203-dist_index.d.ts-5871-6204-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.ResponseObject,structure-dist_index.d.ts-5937-6202-dist_index.d.ts-5904-6203-dist_index.d.ts-5871-6204-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.HeaderObject"
                    }
                  ]
                }
              },
              "content": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3_1.MediaTypeObject"
                }
              },
              "links": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                    },
                    {
                      "$ref": "#/definitions/OpenAPIV3_1.LinkObject"
                    }
                  ]
                }
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "description"
            ]
          },
          "OpenAPIV3_1.HeaderObject": {
            "$ref": "#/definitions/OpenAPIV3.HeaderObject"
          },
          "OpenAPIV3_1.MediaTypeObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.MediaTypeObject%2Cstructure-dist_index.d.ts-5443-5568-dist_index.d.ts-5409-5569-dist_index.d.ts-5375-5570-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.MediaTypeObject,structure-dist_index.d.ts-5443-5568-dist_index.d.ts-5409-5569-dist_index.d.ts-5375-5570-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.SchemaObject"
                  },
                  {
                    "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                  }
                ]
              },
              "examples": {
                "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.ReferenceObject%7COpenAPIV3_1.ExampleObject)%3E"
              },
              "example": {},
              "encoding": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3.EncodingObject"
                }
              }
            }
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.ExampleObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ExampleObject"
                }
              ]
            }
          },
          "OpenAPIV3_1.ExampleObject": {
            "$ref": "#/definitions/OpenAPIV3.ExampleObject"
          },
          "OpenAPIV3_1.LinkObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.LinkObject%2Cstructure-dist_index.d.ts-6262-6301-dist_index.d.ts-6233-6302-dist_index.d.ts-6204-6303-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.LinkObject,structure-dist_index.d.ts-6262-6301-dist_index.d.ts-6233-6302-dist_index.d.ts-6204-6303-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "server": {
                "$ref": "#/definitions/OpenAPIV3_1.ServerObject"
              },
              "operationRef": {
                "type": "string"
              },
              "operationId": {
                "type": "string"
              },
              "parameters": {
                "type": "object"
              },
              "requestBody": {},
              "description": {
                "type": "string"
              }
            }
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.ParameterObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ParameterObject"
                }
              ]
            }
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.RequestBodyObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.RequestBodyObject"
                }
              ]
            }
          },
          "OpenAPIV3_1.RequestBodyObject": {
            "$ref": "#/definitions/Modify%3COpenAPIV3.RequestBodyObject%2Cstructure-dist_index.d.ts-5701-5785-dist_index.d.ts-5665-5786-dist_index.d.ts-5629-5787-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124%3E"
          },
          "Modify<OpenAPIV3.RequestBodyObject,structure-dist_index.d.ts-5701-5785-dist_index.d.ts-5665-5786-dist_index.d.ts-5629-5787-dist_index.d.ts-829-7649-dist_index.d.ts-792-7649-dist_index.d.ts-0-25124>": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "content": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/OpenAPIV3_1.MediaTypeObject"
                }
              },
              "description": {
                "type": "string"
              },
              "required": {
                "type": "boolean"
              }
            },
            "required": [
              "content"
            ]
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.HeaderObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.HeaderObject"
                }
              ]
            }
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.SecuritySchemeObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.SecuritySchemeObject"
                }
              ]
            }
          },
          "OpenAPIV3_1.SecuritySchemeObject": {
            "$ref": "#/definitions/OpenAPIV3.SecuritySchemeObject"
          },
          "OpenAPIV3.SecuritySchemeObject": {
            "anyOf": [
              {
                "$ref": "#/definitions/OpenAPIV3.HttpSecurityScheme"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.ApiKeySecurityScheme"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.OAuth2SecurityScheme"
              },
              {
                "$ref": "#/definitions/OpenAPIV3.OpenIdSecurityScheme"
              }
            ]
          },
          "OpenAPIV3.HttpSecurityScheme": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "http"
              },
              "description": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              },
              "bearerFormat": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "scheme"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.ApiKeySecurityScheme": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "apiKey"
              },
              "description": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "in": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "name",
              "in"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.OAuth2SecurityScheme": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "oauth2"
              },
              "description": {
                "type": "string"
              },
              "flows": {
                "type": "object",
                "properties": {
                  "implicit": {
                    "type": "object",
                    "properties": {
                      "authorizationUrl": {
                        "type": "string"
                      },
                      "refreshUrl": {
                        "type": "string"
                      },
                      "scopes": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "authorizationUrl",
                      "scopes"
                    ],
                    "additionalProperties": false
                  },
                  "password": {
                    "type": "object",
                    "properties": {
                      "tokenUrl": {
                        "type": "string"
                      },
                      "refreshUrl": {
                        "type": "string"
                      },
                      "scopes": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "tokenUrl",
                      "scopes"
                    ],
                    "additionalProperties": false
                  },
                  "clientCredentials": {
                    "type": "object",
                    "properties": {
                      "tokenUrl": {
                        "type": "string"
                      },
                      "refreshUrl": {
                        "type": "string"
                      },
                      "scopes": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "tokenUrl",
                      "scopes"
                    ],
                    "additionalProperties": false
                  },
                  "authorizationCode": {
                    "type": "object",
                    "properties": {
                      "authorizationUrl": {
                        "type": "string"
                      },
                      "tokenUrl": {
                        "type": "string"
                      },
                      "refreshUrl": {
                        "type": "string"
                      },
                      "scopes": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "authorizationUrl",
                      "tokenUrl",
                      "scopes"
                    ],
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "required": [
              "type",
              "flows"
            ],
            "additionalProperties": false
          },
          "OpenAPIV3.OpenIdSecurityScheme": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "openIdConnect"
              },
              "description": {
                "type": "string"
              },
              "openIdConnectUrl": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "openIdConnectUrl"
            ],
            "additionalProperties": false
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.LinkObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.LinkObject"
                }
              ]
            }
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.CallbackObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.CallbackObject"
                }
              ]
            }
          },
          "OpenAPIV3_1.CallbackObject": {
            "$ref": "#/definitions/Record%3Cstring%2C(OpenAPIV3_1.PathItemObject%7COpenAPIV3_1.ReferenceObject)%3E"
          },
          "Record<string,(OpenAPIV3_1.ReferenceObject|OpenAPIV3_1.PathItemObject)>": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/OpenAPIV3_1.ReferenceObject"
                },
                {
                  "$ref": "#/definitions/OpenAPIV3_1.PathItemObject"
                }
              ]
            }
          }
        }
      }
    },
    "parameters": [
      {
        "name": "openapi",
        "schema": {
          "$ref": "#/definitions/OpenapiDocument"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "sleep",
    "start": 0,
    "end": 109,
    "length": 109,
    "raw": "export const sleep = async (ms: number) =>\n  new Promise<void>((resolve) => setTimeout(() => resolve(), ms));",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/sleep.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/sleep.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/sleep.ts",
      "name": "NamedParameters<typeof sleep>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/sleep.ts",
      "operationRelativePath": "src/sleep.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20sleep%3E",
        "definitions": {
          "NamedParameters<typeof sleep>": {
            "type": "object",
            "properties": {
              "ms": {
                "type": "number"
              }
            },
            "required": [
              "ms"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "ms",
        "schema": {
          "type": "number"
        },
        "simplifiedSchema": {
          "type": "number"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "splitObject",
    "start": 28,
    "end": 665,
    "length": 637,
    "raw": "export const splitObject = <TObject extends O>(\n  object: TObject,\n  secondObjectKeys: string[],\n): [Partial<TObject>, Partial<TObject>] => {\n  const initialValue = [object, {}] as [Partial<TObject>, Partial<TObject>];\n\n  const newObject = secondObjectKeys.reduce((previous, key) => {\n    const [primary, secondary] = previous;\n\n    const newPrimary = {\n      ...primary,\n      [key]: undefined,\n    };\n\n    delete newPrimary[key];\n\n    const newSecondary = {\n      ...secondary,\n      [key]: primary[key],\n    };\n\n    return [newPrimary, newSecondary] as [Partial<TObject>, Partial<TObject>];\n  }, initialValue);\n\n  return newObject;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/splitObject.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/splitObject.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/splitObject.ts",
      "name": "NamedParameters<typeof splitObject>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/splitObject.ts",
      "operationRelativePath": "src/splitObject.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20splitObject%3E",
        "definitions": {
          "NamedParameters<typeof splitObject>": {
            "type": "object",
            "properties": {
              "object": {},
              "secondObjectKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "object",
              "secondObjectKeys"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "object",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      },
      {
        "name": "secondObjectKeys",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simplifiedSchema": {
          "items": [
            {
              "schema": {
                "type": "string"
              },
              "name": null
            }
          ],
          "type": "array"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "trimSlashes",
    "start": 0,
    "end": 541,
    "length": 541,
    "raw": "export const trimSlashes = (absoluteOrRelativePath: string) => {\n  const isFirstCharacterSlash = absoluteOrRelativePath.charAt(0) === \"/\";\n  const isLastCharacterSlash =\n    absoluteOrRelativePath.charAt(absoluteOrRelativePath.length - 1) === \"/\";\n\n  const withoutSlashPrefix = isFirstCharacterSlash\n    ? absoluteOrRelativePath.slice(1)\n    : absoluteOrRelativePath;\n  const withoutSlashSuffix = isLastCharacterSlash\n    ? withoutSlashPrefix.slice(0, withoutSlashPrefix.length - 1)\n    : withoutSlashPrefix;\n\n  return withoutSlashSuffix;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/trimSlashes.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/trimSlashes.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/trimSlashes.ts",
      "name": "NamedParameters<typeof trimSlashes>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/trimSlashes.ts",
      "operationRelativePath": "src/trimSlashes.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20trimSlashes%3E",
        "definitions": {
          "NamedParameters<typeof trimSlashes>": {
            "type": "object",
            "properties": {
              "absoluteOrRelativePath": {
                "type": "string"
              }
            },
            "required": [
              "absoluteOrRelativePath"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "absoluteOrRelativePath",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "tryJsonStringify",
    "start": 0,
    "end": 133,
    "length": 133,
    "raw": "export const tryJsonStringify = (data: any) => {\n  try {\n    return JSON.stringify(data, null, 2);\n  } catch (e) {\n    return;\n  }\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/tryJsonStringify.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/tryJsonStringify.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/tryJsonStringify.ts",
      "name": "NamedParameters<typeof tryJsonStringify>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/tryJsonStringify.ts",
      "operationRelativePath": "src/tryJsonStringify.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20tryJsonStringify%3E",
        "definitions": {
          "NamedParameters<typeof tryJsonStringify>": {
            "type": "object",
            "properties": {
              "data": {}
            },
            "required": [
              "data"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "data",
        "schema": {},
        "simplifiedSchema": {
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcVariable",
    "name": "removeCommentsRegex",
    "start": 0,
    "end": 77,
    "length": 77,
    "raw": "const removeCommentsRegex = /\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g;",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/tryParseJson.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/tryParseJson.ts",
    "isExported": false,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs"
  },
  {
    "modelName": "SwcFunction",
    "name": "tryParseJson",
    "start": 123,
    "end": 528,
    "length": 405,
    "raw": "export const tryParseJson = <T extends unknown>(\n  text: string,\n  logParseError?: boolean,\n): T | null => {\n  try {\n    const jsonStringWithoutComments = text.replace(\n      removeCommentsRegex,\n      (m, g) => (g ? \"\" : m),\n    );\n    return JSON.parse(jsonStringWithoutComments) as T;\n  } catch (parseError) {\n    if (logParseError) console.log(\"JSON Parse error:\", parseError);\n    return null;\n  }\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/tryParseJson.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/tryParseJson.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/tryParseJson.ts",
      "name": "NamedParameters<typeof tryParseJson>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/tryParseJson.ts",
      "operationRelativePath": "src/tryParseJson.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20tryParseJson%3E",
        "definitions": {
          "NamedParameters<typeof tryParseJson>": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              },
              "logParseError": {
                "type": "boolean"
              }
            },
            "required": [
              "text"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "text",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      },
      {
        "name": "logParseError",
        "schema": {
          "type": "boolean"
        },
        "simplifiedSchema": {
          "type": "boolean"
        },
        "required": false
      }
    ]
  },
  {
    "modelName": "SwcFunction",
    "name": "tryParseYamlToJson",
    "start": 119,
    "end": 417,
    "length": 298,
    "raw": "export const tryParseYamlToJson = <T = any>(yamlString: string): T | null => {\n  // Get document, or throw exception on error\n  try {\n    const document = load(yamlString);\n    return document as T;\n  } catch (e: any) {\n    // console.log(\"failed parsing yaml\", e?.message);\n    return null;\n  }\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/tryParseYamlToJson.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/tryParseYamlToJson.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {},
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/tryParseYamlToJson.ts",
      "name": "NamedParameters<typeof tryParseYamlToJson>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/tryParseYamlToJson.ts",
      "operationRelativePath": "src/tryParseYamlToJson.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20tryParseYamlToJson%3E",
        "definitions": {
          "NamedParameters<typeof tryParseYamlToJson>": {
            "type": "object",
            "properties": {
              "yamlString": {
                "type": "string"
              }
            },
            "required": [
              "yamlString"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "parameters": [
      {
        "name": "yamlString",
        "schema": {
          "type": "string"
        },
        "simplifiedSchema": {
          "type": "string"
        },
        "required": true
      }
    ]
  },
  {
    "modelName": "SwcInterface",
    "name": "KeysOfType",
    "start": 0,
    "end": 90,
    "raw": "export type KeysOfType<T, U> = {\n  [K in keyof T]: T[K] extends U ? K : never;\n}[keyof T];",
    "length": 90,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {},
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      }
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "RequiredKeys",
    "start": 91,
    "end": 193,
    "raw": "export type RequiredKeys<T> = Exclude<\n  KeysOfType<T, Exclude<T[keyof T], undefined>>,\n  undefined\n>;",
    "length": 102,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "OptionalKeys",
    "start": 194,
    "end": 258,
    "raw": "export type OptionalKeys<T> = Exclude<Keys<T>, RequiredKeys<T>>;",
    "length": 64,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "Keys",
    "start": 260,
    "end": 307,
    "raw": "export type Keys<T> = Extract<keyof T, string>;",
    "length": 47,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0,
      "typeDefinition": {
        "$ref": "#/definitions/Extract%3C()%2Cstring%3E"
      }
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "StringEndsWith",
    "start": 309,
    "end": 440,
    "raw": "export type StringEndsWith<\n  TString extends string,\n  TEnd extends string,\n> = TString extends `${string}${TEnd}` ? true : false;",
    "length": 131,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "Pop",
    "start": 614,
    "end": 689,
    "raw": "export type Pop<T extends any[]> = T extends [...infer U, any] ? U : never;",
    "length": 75,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "Shift",
    "start": 769,
    "end": 846,
    "raw": "export type Shift<T extends any[]> = T extends [any, ...infer U] ? U : never;",
    "length": 77,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "WithoutPromise",
    "start": 1024,
    "end": 1091,
    "raw": "export type WithoutPromise<T> = T extends Promise<infer U> ? U : T;",
    "length": 67,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0
    }
  },
  {
    "modelName": "SwcInterface",
    "name": "WithPromise",
    "start": 1151,
    "end": 1237,
    "raw": "export type WithPromise<T> = T extends Promise<infer U>\n  ? Promise<U>\n  : Promise<T>;",
    "length": 86,
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/types.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/types.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "type": {
      "isArray": false,
      "isEnum": false,
      "isEnumLiteral": false,
      "isObject": false,
      "isPrimitive": false,
      "rawType": "",
      "typeCoverage": 0
    }
  },
  {
    "modelName": "SwcVariable",
    "name": "uniqueSlug",
    "start": 44,
    "end": 135,
    "length": 91,
    "raw": "export const uniqueSlug = onlyUnique2<{ __id?: string }>(\n  (a, b) => a.__id === b.__id,\n);",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/uniqueSlug.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/uniqueSlug.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs"
  },
  {
    "modelName": "SwcFunction",
    "name": "unwrapJson",
    "start": 208,
    "end": 898,
    "length": 690,
    "raw": "export const unwrapJson = (json: Json): Json => {\n  if (json === null) {\n    return null;\n  }\n  if (json === undefined) {\n    return null;\n  }\n\n  if (typeof json === \"boolean\") {\n    return json;\n  }\n\n  if (typeof json === \"object\" && !Array.isArray(json)) {\n    const result = Object.keys(json).map((key) => {\n      const value = json[key];\n      return { [key]: unwrapJson(value) };\n    });\n    return result;\n  }\n  if (typeof json === \"object\" && Array.isArray(json)) {\n    return json.map((item) => unwrapJson(item));\n  }\n\n  if (typeof json === \"string\") {\n    // THE MAGIC\n    const parsed = tryParseJson<Json>(json);\n    return parsed || json;\n  }\n  //number is left\n  return json;\n};",
    "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/from-anywhere/src/unwrapJson.ts",
    "projectRelativePath": "packages/_actionschema/from-anywhere/src/unwrapJson.ts",
    "isExported": true,
    "packageCategory": "_actionschema",
    "packageName": "from-anywhere",
    "operationClassification": "cjs",
    "returnType": {},
    "otherDefs": {
      "Json": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "boolean"
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/Json"
            }
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Json"
            }
          }
        ]
      }
    },
    "namedParameters": {
      "modelName": "SchemaItem",
      "projectRelativePath": "packages/_actionschema/js-util/src/unwrapJson.ts",
      "name": "NamedParameters<typeof unwrapJson>",
      "absolutePath": "/Users/king/Desktop/github/os/packages/_actionschema/js-util/src/unwrapJson.ts",
      "operationRelativePath": "src/unwrapJson.ts",
      "schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/NamedParameters%3Ctypeof%20unwrapJson%3E",
        "definitions": {
          "NamedParameters<typeof unwrapJson>": {
            "type": "object",
            "properties": {
              "json": {
                "$ref": "#/definitions/Json"
              }
            },
            "required": [
              "json"
            ],
            "additionalProperties": false
          },
          "Json": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/Json"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Json"
                }
              }
            ]
          }
        }
      }
    },
    "parameters": [
      {
        "name": "json",
        "schema": {
          "$ref": "#/definitions/Json"
        },
        "simplifiedSchema": {
          "fullComment": "",
          "properties": [],
          "type": "object"
        },
        "required": true
      }
    ]
  }
]